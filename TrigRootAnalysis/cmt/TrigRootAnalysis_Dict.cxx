//
// File generated by /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.14-x86_64-slc5-gcc4.3/bin/rootcint at Thu May 29 17:54:12 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TrigRootAnalysis_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TrigRootAnalysis_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace D3PD {
         namespace Trig {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::Trig::IDataAccess IDataAccess;
      #else
      class IDataAccess  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::D3PD::Trig::IDataAccess::L1ResultType L1ResultType;
         #else
         enum L1ResultType  {
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::D3PD::Trig::IDataAccess::HLTResultType HLTResultType;
         #else
         enum HLTResultType  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~IDataAccess() throw() {};
      };
      #endif
      } } 
      namespace D3PD {
         namespace Trig {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::Trig::IConfigAccess IConfigAccess;
      #else
      class IConfigAccess  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IConfigAccess() throw() {};
      };
      #endif
      } } 
      namespace D3PD {
         namespace Trig {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::Trig::ChainGroupHandling ChainGroupHandling;
      #else
      class ChainGroupHandling  :  virtual public ::D3PD::IITrigDecisionToolD3PD,  virtual public ::D3PD::Trig::IDataAccess,  virtual public ::D3PD::Trig::IConfigAccess {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ChainGroupHandling() throw() {};
      };
      #endif
      } } 
      namespace D3PD {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::IITrigConfigSvcD3PD IITrigConfigSvcD3PD;
      #else
      class IITrigConfigSvcD3PD  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IITrigConfigSvcD3PD() throw() {};
      };
      #endif
      } 
      namespace D3PD {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::IITrigDecisionToolD3PD IITrigDecisionToolD3PD;
      #else
      class IITrigDecisionToolD3PD  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~IITrigDecisionToolD3PD() throw() {};
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, ::string > pairlEstringcOstringgR;
      #else
      class pairlEstringcOstringgR  {
         public:
         //friend XX;
         string first; //
         string second; //
      };
      #endif

      namespace D3PD {
         namespace Trig {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::D3PD::Trig::TrigDecisionFunctions TrigDecisionFunctions;
      #else
      class TrigDecisionFunctions  :  virtual public ::D3PD::IITrigDecisionToolD3PD,  virtual public ::D3PD::Trig::IDataAccess,  virtual public ::D3PD::Trig::IConfigAccess {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TrigDecisionFunctions() throw() {};
      };
      #endif
      } } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void D3PDcLcLTrigcLcLIDataAccess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void D3PDcLcLTrigcLcLIDataAccess_Dictionary();
   static void delete_D3PDcLcLTrigcLcLIDataAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLIDataAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLIDataAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::IDataAccess*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::Trig::IDataAccess) == sizeof(::ROOT::Shadow::D3PD::Trig::IDataAccess));
      ::D3PD::Trig::IDataAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::Trig::IDataAccess),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::IDataAccess", "./../TrigRootAnalysis/IDataAccess.h", 32,
                  typeid(::D3PD::Trig::IDataAccess), DefineBehavior(ptr, ptr),
                  &D3PDcLcLTrigcLcLIDataAccess_ShowMembers, &D3PDcLcLTrigcLcLIDataAccess_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::IDataAccess) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLIDataAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLIDataAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLIDataAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::IDataAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::IDataAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::IDataAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLTrigcLcLIDataAccess_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IDataAccess*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLIConfigAccess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void D3PDcLcLTrigcLcLIConfigAccess_Dictionary();
   static void delete_D3PDcLcLTrigcLcLIConfigAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLIConfigAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLIConfigAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::IConfigAccess*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::Trig::IConfigAccess) == sizeof(::ROOT::Shadow::D3PD::Trig::IConfigAccess));
      ::D3PD::Trig::IConfigAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::Trig::IConfigAccess),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::IConfigAccess", "./../TrigRootAnalysis/IConfigAccess.h", 29,
                  typeid(::D3PD::Trig::IConfigAccess), DefineBehavior(ptr, ptr),
                  &D3PDcLcLTrigcLcLIConfigAccess_ShowMembers, &D3PDcLcLTrigcLcLIConfigAccess_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::IConfigAccess) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLIConfigAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLIConfigAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLIConfigAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::IConfigAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::IConfigAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::IConfigAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLTrigcLcLIConfigAccess_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IConfigAccess*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLChainGroupHandling_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void D3PDcLcLTrigcLcLChainGroupHandling_Dictionary();
   static void delete_D3PDcLcLTrigcLcLChainGroupHandling(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLChainGroupHandling(void *p);
   static void destruct_D3PDcLcLTrigcLcLChainGroupHandling(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::ChainGroupHandling*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::Trig::ChainGroupHandling) == sizeof(::ROOT::Shadow::D3PD::Trig::ChainGroupHandling));
      ::D3PD::Trig::ChainGroupHandling *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::Trig::ChainGroupHandling),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::ChainGroupHandling", "./../TrigRootAnalysis/ChainGroupHandling.h", 34,
                  typeid(::D3PD::Trig::ChainGroupHandling), DefineBehavior(ptr, ptr),
                  &D3PDcLcLTrigcLcLChainGroupHandling_ShowMembers, &D3PDcLcLTrigcLcLChainGroupHandling_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::ChainGroupHandling) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLChainGroupHandling);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLChainGroupHandling);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLChainGroupHandling);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::ChainGroupHandling*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::ChainGroupHandling*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLTrigcLcLChainGroupHandling_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLChainGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_D3PDcLcLChainGroup(void *p);
   static void deleteArray_D3PDcLcLChainGroup(void *p);
   static void destruct_D3PDcLcLChainGroup(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::ChainGroup*)
   {
      ::D3PD::ChainGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::ChainGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::ChainGroup", ::D3PD::ChainGroup::Class_Version(), "./../TrigRootAnalysis/ChainGroup.h", 37,
                  typeid(::D3PD::ChainGroup), DefineBehavior(ptr, ptr),
                  &::D3PD::ChainGroup::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::ChainGroup) );
      instance.SetDelete(&delete_D3PDcLcLChainGroup);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLChainGroup);
      instance.SetDestructor(&destruct_D3PDcLcLChainGroup);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::ChainGroup*)
   {
      return GenerateInitInstanceLocal((::D3PD::ChainGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLIITrigConfigSvcD3PD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void D3PDcLcLIITrigConfigSvcD3PD_Dictionary();
   static void delete_D3PDcLcLIITrigConfigSvcD3PD(void *p);
   static void deleteArray_D3PDcLcLIITrigConfigSvcD3PD(void *p);
   static void destruct_D3PDcLcLIITrigConfigSvcD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::IITrigConfigSvcD3PD*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::IITrigConfigSvcD3PD) == sizeof(::ROOT::Shadow::D3PD::IITrigConfigSvcD3PD));
      ::D3PD::IITrigConfigSvcD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::IITrigConfigSvcD3PD),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::IITrigConfigSvcD3PD", "./../TrigRootAnalysis/IITrigConfigSvcD3PD.h", 23,
                  typeid(::D3PD::IITrigConfigSvcD3PD), DefineBehavior(ptr, ptr),
                  &D3PDcLcLIITrigConfigSvcD3PD_ShowMembers, &D3PDcLcLIITrigConfigSvcD3PD_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::IITrigConfigSvcD3PD) );
      instance.SetDelete(&delete_D3PDcLcLIITrigConfigSvcD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLIITrigConfigSvcD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLIITrigConfigSvcD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::IITrigConfigSvcD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::IITrigConfigSvcD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::IITrigConfigSvcD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLIITrigConfigSvcD3PD_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::IITrigConfigSvcD3PD*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLIITrigDecisionToolD3PD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void D3PDcLcLIITrigDecisionToolD3PD_Dictionary();
   static void delete_D3PDcLcLIITrigDecisionToolD3PD(void *p);
   static void deleteArray_D3PDcLcLIITrigDecisionToolD3PD(void *p);
   static void destruct_D3PDcLcLIITrigDecisionToolD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::IITrigDecisionToolD3PD*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::IITrigDecisionToolD3PD) == sizeof(::ROOT::Shadow::D3PD::IITrigDecisionToolD3PD));
      ::D3PD::IITrigDecisionToolD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::IITrigDecisionToolD3PD),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::IITrigDecisionToolD3PD", "./../TrigRootAnalysis/IITrigDecisionToolD3PD.h", 31,
                  typeid(::D3PD::IITrigDecisionToolD3PD), DefineBehavior(ptr, ptr),
                  &D3PDcLcLIITrigDecisionToolD3PD_ShowMembers, &D3PDcLcLIITrigDecisionToolD3PD_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::IITrigDecisionToolD3PD) );
      instance.SetDelete(&delete_D3PDcLcLIITrigDecisionToolD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLIITrigDecisionToolD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLIITrigDecisionToolD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::IITrigDecisionToolD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::IITrigDecisionToolD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::IITrigDecisionToolD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLIITrigDecisionToolD3PD_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::IITrigDecisionToolD3PD*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigConfigSvcD3PD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_D3PDcLcLTrigConfigSvcD3PD(void *p = 0);
   static void *newArray_D3PDcLcLTrigConfigSvcD3PD(Long_t size, void *p);
   static void delete_D3PDcLcLTrigConfigSvcD3PD(void *p);
   static void deleteArray_D3PDcLcLTrigConfigSvcD3PD(void *p);
   static void destruct_D3PDcLcLTrigConfigSvcD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::TrigConfigSvcD3PD*)
   {
      ::D3PD::TrigConfigSvcD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::TrigConfigSvcD3PD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::TrigConfigSvcD3PD", ::D3PD::TrigConfigSvcD3PD::Class_Version(), "./../TrigRootAnalysis/TrigConfigSvcD3PD.h", 41,
                  typeid(::D3PD::TrigConfigSvcD3PD), DefineBehavior(ptr, ptr),
                  &::D3PD::TrigConfigSvcD3PD::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::TrigConfigSvcD3PD) );
      instance.SetNew(&new_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetNewArray(&newArray_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetDelete(&delete_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigConfigSvcD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLTrigConfigSvcD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::TrigConfigSvcD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::TrigConfigSvcD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEstringcOstringgR_Dictionary();
   static void *new_pairlEstringcOstringgR(void *p = 0);
   static void *newArray_pairlEstringcOstringgR(Long_t size, void *p);
   static void delete_pairlEstringcOstringgR(void *p);
   static void deleteArray_pairlEstringcOstringgR(void *p);
   static void destruct_pairlEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<string,string>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(pair<string,string>) == sizeof(::ROOT::Shadow::pairlEstringcOstringgR));
      pair<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,string>", "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.14-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/utility", 17,
                  typeid(pair<string,string>), DefineBehavior(ptr, ptr),
                  &pairlEstringcOstringgR_ShowMembers, &pairlEstringcOstringgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<string,string>) );
      instance.SetNew(&new_pairlEstringcOstringgR);
      instance.SetNewArray(&newArray_pairlEstringcOstringgR);
      instance.SetDelete(&delete_pairlEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOstringgR);
      instance.SetDestructor(&destruct_pairlEstringcOstringgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<string,string>*)
   {
      return GenerateInitInstanceLocal((pair<string,string>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLConfigAccess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_D3PDcLcLTrigcLcLConfigAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLConfigAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLConfigAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::ConfigAccess*)
   {
      ::D3PD::Trig::ConfigAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::Trig::ConfigAccess >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::ConfigAccess", ::D3PD::Trig::ConfigAccess::Class_Version(), "./../TrigRootAnalysis/ConfigAccess.h", 38,
                  typeid(::D3PD::Trig::ConfigAccess), DefineBehavior(ptr, ptr),
                  &::D3PD::Trig::ConfigAccess::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::ConfigAccess) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLConfigAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLConfigAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLConfigAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::ConfigAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::ConfigAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLDataAccess_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_D3PDcLcLTrigcLcLDataAccess(void *p = 0);
   static void *newArray_D3PDcLcLTrigcLcLDataAccess(Long_t size, void *p);
   static void delete_D3PDcLcLTrigcLcLDataAccess(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLDataAccess(void *p);
   static void destruct_D3PDcLcLTrigcLcLDataAccess(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::DataAccess*)
   {
      ::D3PD::Trig::DataAccess *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::Trig::DataAccess >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::DataAccess", ::D3PD::Trig::DataAccess::Class_Version(), "./../TrigRootAnalysis/DataAccess.h", 60,
                  typeid(::D3PD::Trig::DataAccess), DefineBehavior(ptr, ptr),
                  &::D3PD::Trig::DataAccess::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::DataAccess) );
      instance.SetNew(&new_D3PDcLcLTrigcLcLDataAccess);
      instance.SetNewArray(&newArray_D3PDcLcLTrigcLcLDataAccess);
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLDataAccess);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLDataAccess);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLDataAccess);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::DataAccess*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::DataAccess*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigcLcLTrigDecisionFunctions_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void D3PDcLcLTrigcLcLTrigDecisionFunctions_Dictionary();
   static void delete_D3PDcLcLTrigcLcLTrigDecisionFunctions(void *p);
   static void deleteArray_D3PDcLcLTrigcLcLTrigDecisionFunctions(void *p);
   static void destruct_D3PDcLcLTrigcLcLTrigDecisionFunctions(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::Trig::TrigDecisionFunctions*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::D3PD::Trig::TrigDecisionFunctions) == sizeof(::ROOT::Shadow::D3PD::Trig::TrigDecisionFunctions));
      ::D3PD::Trig::TrigDecisionFunctions *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::D3PD::Trig::TrigDecisionFunctions),0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::Trig::TrigDecisionFunctions", "./../TrigRootAnalysis/TrigDecisionFunctions.h", 31,
                  typeid(::D3PD::Trig::TrigDecisionFunctions), DefineBehavior(ptr, ptr),
                  &D3PDcLcLTrigcLcLTrigDecisionFunctions_ShowMembers, &D3PDcLcLTrigcLcLTrigDecisionFunctions_Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::Trig::TrigDecisionFunctions) );
      instance.SetDelete(&delete_D3PDcLcLTrigcLcLTrigDecisionFunctions);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigcLcLTrigDecisionFunctions);
      instance.SetDestructor(&destruct_D3PDcLcLTrigcLcLTrigDecisionFunctions);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::Trig::TrigDecisionFunctions*)
   {
      return GenerateInitInstanceLocal((::D3PD::Trig::TrigDecisionFunctions*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::Trig::TrigDecisionFunctions*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void D3PDcLcLTrigcLcLTrigDecisionFunctions_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::TrigDecisionFunctions*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLTrigDecisionToolD3PD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_D3PDcLcLTrigDecisionToolD3PD(void *p = 0);
   static void *newArray_D3PDcLcLTrigDecisionToolD3PD(Long_t size, void *p);
   static void delete_D3PDcLcLTrigDecisionToolD3PD(void *p);
   static void deleteArray_D3PDcLcLTrigDecisionToolD3PD(void *p);
   static void destruct_D3PDcLcLTrigDecisionToolD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::TrigDecisionToolD3PD*)
   {
      ::D3PD::TrigDecisionToolD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::TrigDecisionToolD3PD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::TrigDecisionToolD3PD", ::D3PD::TrigDecisionToolD3PD::Class_Version(), "./../TrigRootAnalysis/TrigDecisionToolD3PD.h", 46,
                  typeid(::D3PD::TrigDecisionToolD3PD), DefineBehavior(ptr, ptr),
                  &::D3PD::TrigDecisionToolD3PD::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::TrigDecisionToolD3PD) );
      instance.SetNew(&new_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetNewArray(&newArray_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetDelete(&delete_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLTrigDecisionToolD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLTrigDecisionToolD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::TrigDecisionToolD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::TrigDecisionToolD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void D3PDcLcLPyTrigDecisionToolD3PD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_D3PDcLcLPyTrigDecisionToolD3PD(void *p = 0);
   static void *newArray_D3PDcLcLPyTrigDecisionToolD3PD(Long_t size, void *p);
   static void delete_D3PDcLcLPyTrigDecisionToolD3PD(void *p);
   static void deleteArray_D3PDcLcLPyTrigDecisionToolD3PD(void *p);
   static void destruct_D3PDcLcLPyTrigDecisionToolD3PD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::D3PD::PyTrigDecisionToolD3PD*)
   {
      ::D3PD::PyTrigDecisionToolD3PD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::D3PD::PyTrigDecisionToolD3PD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("D3PD::PyTrigDecisionToolD3PD", ::D3PD::PyTrigDecisionToolD3PD::Class_Version(), "./../TrigRootAnalysis/PyTrigDecisionToolD3PD.h", 46,
                  typeid(::D3PD::PyTrigDecisionToolD3PD), DefineBehavior(ptr, ptr),
                  &::D3PD::PyTrigDecisionToolD3PD::Dictionary, isa_proxy, 4,
                  sizeof(::D3PD::PyTrigDecisionToolD3PD) );
      instance.SetNew(&new_D3PDcLcLPyTrigDecisionToolD3PD);
      instance.SetNewArray(&newArray_D3PDcLcLPyTrigDecisionToolD3PD);
      instance.SetDelete(&delete_D3PDcLcLPyTrigDecisionToolD3PD);
      instance.SetDeleteArray(&deleteArray_D3PDcLcLPyTrigDecisionToolD3PD);
      instance.SetDestructor(&destruct_D3PDcLcLPyTrigDecisionToolD3PD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::D3PD::PyTrigDecisionToolD3PD*)
   {
      return GenerateInitInstanceLocal((::D3PD::PyTrigDecisionToolD3PD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::D3PD::PyTrigDecisionToolD3PD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace D3PD {
//______________________________________________________________________________
TClass *ChainGroup::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ChainGroup::Class_Name()
{
   return "D3PD::ChainGroup";
}

//______________________________________________________________________________
const char *ChainGroup::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ChainGroup::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ChainGroup::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ChainGroup::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::ChainGroup*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
      namespace D3PD {
//______________________________________________________________________________
TClass *TrigConfigSvcD3PD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrigConfigSvcD3PD::Class_Name()
{
   return "D3PD::TrigConfigSvcD3PD";
}

//______________________________________________________________________________
const char *TrigConfigSvcD3PD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrigConfigSvcD3PD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrigConfigSvcD3PD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrigConfigSvcD3PD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigConfigSvcD3PD*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
TClass *ConfigAccess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ConfigAccess::Class_Name()
{
   return "D3PD::Trig::ConfigAccess";
}

//______________________________________________________________________________
const char *ConfigAccess::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ConfigAccess::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ConfigAccess::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ConfigAccess::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ConfigAccess*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
TClass *DataAccess::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DataAccess::Class_Name()
{
   return "D3PD::Trig::DataAccess";
}

//______________________________________________________________________________
const char *DataAccess::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataAccess::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataAccess::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataAccess::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::DataAccess*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
      namespace D3PD {
//______________________________________________________________________________
TClass *TrigDecisionToolD3PD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TrigDecisionToolD3PD::Class_Name()
{
   return "D3PD::TrigDecisionToolD3PD";
}

//______________________________________________________________________________
const char *TrigDecisionToolD3PD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrigDecisionToolD3PD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrigDecisionToolD3PD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrigDecisionToolD3PD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::TrigDecisionToolD3PD*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
      namespace D3PD {
//______________________________________________________________________________
TClass *PyTrigDecisionToolD3PD::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PyTrigDecisionToolD3PD::Class_Name()
{
   return "D3PD::PyTrigDecisionToolD3PD";
}

//______________________________________________________________________________
const char *PyTrigDecisionToolD3PD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::PyTrigDecisionToolD3PD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PyTrigDecisionToolD3PD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::D3PD::PyTrigDecisionToolD3PD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PyTrigDecisionToolD3PD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::PyTrigDecisionToolD3PD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PyTrigDecisionToolD3PD::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::PyTrigDecisionToolD3PD*)0x0)->GetClass();
   return fgIsA;
}

} // namespace D3PD
//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLIITrigConfigSvcD3PD_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class D3PD::IITrigConfigSvcD3PD.
      typedef ::ROOT::Shadow::D3PD::IITrigConfigSvcD3PD ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::IITrigConfigSvcD3PD*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLIITrigConfigSvcD3PD(void *p) {
      delete ((::D3PD::IITrigConfigSvcD3PD*)p);
   }
   static void deleteArray_D3PDcLcLIITrigConfigSvcD3PD(void *p) {
      delete [] ((::D3PD::IITrigConfigSvcD3PD*)p);
   }
   static void destruct_D3PDcLcLIITrigConfigSvcD3PD(void *p) {
      typedef ::D3PD::IITrigConfigSvcD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::IITrigConfigSvcD3PD

//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLIITrigDecisionToolD3PD_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class D3PD::IITrigDecisionToolD3PD.
      typedef ::ROOT::Shadow::D3PD::IITrigDecisionToolD3PD ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::IITrigDecisionToolD3PD*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLIITrigDecisionToolD3PD(void *p) {
      delete ((::D3PD::IITrigDecisionToolD3PD*)p);
   }
   static void deleteArray_D3PDcLcLIITrigDecisionToolD3PD(void *p) {
      delete [] ((::D3PD::IITrigDecisionToolD3PD*)p);
   }
   static void destruct_D3PDcLcLIITrigDecisionToolD3PD(void *p) {
      typedef ::D3PD::IITrigDecisionToolD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::IITrigDecisionToolD3PD

//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLTrigcLcLIDataAccess_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class D3PD::Trig::IDataAccess.
      typedef ::ROOT::Shadow::D3PD::Trig::IDataAccess ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IDataAccess*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLIDataAccess(void *p) {
      delete ((::D3PD::Trig::IDataAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLIDataAccess(void *p) {
      delete [] ((::D3PD::Trig::IDataAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLIDataAccess(void *p) {
      typedef ::D3PD::Trig::IDataAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::IDataAccess

//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLTrigcLcLIConfigAccess_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class D3PD::Trig::IConfigAccess.
      typedef ::ROOT::Shadow::D3PD::Trig::IConfigAccess ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::IConfigAccess*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLIConfigAccess(void *p) {
      delete ((::D3PD::Trig::IConfigAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLIConfigAccess(void *p) {
      delete [] ((::D3PD::Trig::IConfigAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLIConfigAccess(void *p) {
      typedef ::D3PD::Trig::IConfigAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::IConfigAccess

      namespace D3PD {
//______________________________________________________________________________
void TrigConfigSvcD3PD::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::TrigConfigSvcD3PD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::TrigConfigSvcD3PD::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::TrigConfigSvcD3PD::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void TrigConfigSvcD3PD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class D3PD::TrigConfigSvcD3PD.
      TClass *R__cl = ::D3PD::TrigConfigSvcD3PD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_lvl1NameMap", (void*)&m_lvl1NameMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,int> >", (void*)&m_lvl1NameMap, "m_lvl1NameMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_lvl1PrescaleMap", (void*)&m_lvl1PrescaleMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,float> >", (void*)&m_lvl1PrescaleMap, "m_lvl1PrescaleMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltNameMap", (void*)&m_hltNameMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,int> >", (void*)&m_hltNameMap, "m_hltNameMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltPrescaleMap", (void*)&m_hltPrescaleMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,float> >", (void*)&m_hltPrescaleMap, "m_hltPrescaleMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltRerunPrescaleMap", (void*)&m_hltRerunPrescaleMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,float> >", (void*)&m_hltRerunPrescaleMap, "m_hltRerunPrescaleMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltPassthroughMap", (void*)&m_hltPassthroughMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,float> >", (void*)&m_hltPassthroughMap, "m_hltPassthroughMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_lowerChainNameMap", (void*)&m_lowerChainNameMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::string,std::string> >", (void*)&m_lowerChainNameMap, "m_lowerChainNameMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TEIndexMap", (void*)&m_TEIndexMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<unsigned int,unsigned int> >", (void*)&m_TEIndexMap, "m_TEIndexMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltSequenceNameMap", (void*)&m_hltSequenceNameMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<unsigned int,std::string> >", (void*)&m_hltSequenceNameMap, "m_hltSequenceNameMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltAlgorithmNameMap", (void*)&m_hltAlgorithmNameMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::pair<int,int>,std::string> >", (void*)&m_hltAlgorithmNameMap, "m_hltAlgorithmNameMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltAlgorithmNameIDMap", (void*)&m_hltAlgorithmNameIDMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::pair<int,int>,unsigned int> >", (void*)&m_hltAlgorithmNameIDMap, "m_hltAlgorithmNameIDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltAlgorithmTypeMap", (void*)&m_hltAlgorithmTypeMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::pair<int,int>,std::string> >", (void*)&m_hltAlgorithmTypeMap, "m_hltAlgorithmTypeMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_hltAlgorithmTypeIDMap", (void*)&m_hltAlgorithmTypeIDMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<std::pair<int,int>,unsigned int> >", (void*)&m_hltAlgorithmTypeIDMap, "m_hltAlgorithmTypeIDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_initialized", &m_initialized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_key", (void*)&m_key);
      R__insp.InspectMember("D3PD::TrigConfigSvcD3PD::DBKeys_t", (void*)&m_key, "m_key.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_lvl1IDMap", (void*)&m_lvl1IDMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<int,std::string> >", (void*)&m_lvl1IDMap, "m_lvl1IDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_lvl2IDMap", (void*)&m_lvl2IDMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<int,std::string> >", (void*)&m_lvl2IDMap, "m_lvl2IDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_efIDMap", (void*)&m_efIDMap);
      R__insp.InspectMember("map<DBKeys_t,std::map<int,std::string> >", (void*)&m_efIDMap, "m_efIDMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_confLVL1Items", (void*)&m_confLVL1Items);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::string> >", (void*)&m_confLVL1Items, "m_confLVL1Items.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_confHLTChains", (void*)&m_confHLTChains);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::string> >", (void*)&m_confHLTChains, "m_confHLTChains.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_dummy", (void*)&m_dummy);
      R__insp.InspectMember("string", (void*)&m_dummy, "m_dummy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_dummyVec", (void*)&m_dummyVec);
      R__insp.InspectMember("vector<std::string>", (void*)&m_dummyVec, "m_dummyVec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainN", (void*)&m_chainN);
      R__insp.InspectMember("map<DBKeys_t,uint16_t>", (void*)&m_chainN, "m_chainN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainID", (void*)&m_chainID);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint32_t> >", (void*)&m_chainID, "m_chainID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainCounter", (void*)&m_chainCounter);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint16_t> >", (void*)&m_chainCounter, "m_chainCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainName", (void*)&m_chainName);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::string> >", (void*)&m_chainName, "m_chainName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainLowerID", (void*)&m_chainLowerID);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint32_t> >", (void*)&m_chainLowerID, "m_chainLowerID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainLowerIDs", (void*)&m_chainLowerIDs);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_chainLowerIDs, "m_chainLowerIDs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainLowerName", (void*)&m_chainLowerName);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::string> >", (void*)&m_chainLowerName, "m_chainLowerName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainLowerCounter", (void*)&m_chainLowerCounter);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint16_t> >", (void*)&m_chainLowerCounter, "m_chainLowerCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainLevel", (void*)&m_chainLevel);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint8_t> >", (void*)&m_chainLevel, "m_chainLevel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainPrescale", (void*)&m_chainPrescale);
      R__insp.InspectMember("map<DBKeys_t,std::vector<float> >", (void*)&m_chainPrescale, "m_chainPrescale.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainPassthrough", (void*)&m_chainPassthrough);
      R__insp.InspectMember("map<DBKeys_t,std::vector<float> >", (void*)&m_chainPassthrough, "m_chainPassthrough.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainStreamNames", (void*)&m_chainStreamNames);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<std::string> > >", (void*)&m_chainStreamNames, "m_chainStreamNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainStreamPrescales", (void*)&m_chainStreamPrescales);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<float> > >", (void*)&m_chainStreamPrescales, "m_chainStreamPrescales.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainGroupNames", (void*)&m_chainGroupNames);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<std::string> > >", (void*)&m_chainGroupNames, "m_chainGroupNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainEBHypoNames", (void*)&m_chainEBHypoNames);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<std::string> > >", (void*)&m_chainEBHypoNames, "m_chainEBHypoNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigN", (void*)&m_chainSigN);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint16_t> >", (void*)&m_chainSigN, "m_chainSigN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigCounter", (void*)&m_chainSigCounter);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_chainSigCounter, "m_chainSigCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigLogic", (void*)&m_chainSigLogic);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_chainSigLogic, "m_chainSigLogic.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigLabel", (void*)&m_chainSigLabel);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<std::string> > >", (void*)&m_chainSigLabel, "m_chainSigLabel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigOutputTEn", (void*)&m_chainSigOutputTEn);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint16_t> > >", (void*)&m_chainSigOutputTEn, "m_chainSigOutputTEn.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigOutputTEIndex", (void*)&m_chainSigOutputTEIndex);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_chainSigOutputTEIndex, "m_chainSigOutputTEIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_chainSigOutputTEs", (void*)&m_chainSigOutputTEs);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_chainSigOutputTEs, "m_chainSigOutputTEs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqN", (void*)&m_seqN);
      R__insp.InspectMember("map<DBKeys_t,uint16_t>", (void*)&m_seqN, "m_seqN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqID", (void*)&m_seqID);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint32_t> >", (void*)&m_seqID, "m_seqID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqIndex", (void*)&m_seqIndex);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint16_t> >", (void*)&m_seqIndex, "m_seqIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqName", (void*)&m_seqName);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::string> >", (void*)&m_seqName, "m_seqName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqTopoTEID", (void*)&m_seqTopoTEID);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint32_t> >", (void*)&m_seqTopoTEID, "m_seqTopoTEID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqInputTEs", (void*)&m_seqInputTEs);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_seqInputTEs, "m_seqInputTEs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgN", (void*)&m_seqAlgN);
      R__insp.InspectMember("map<DBKeys_t,std::vector<uint16_t> >", (void*)&m_seqAlgN, "m_seqAlgN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgIndex", (void*)&m_seqAlgIndex);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint16_t> > >", (void*)&m_seqAlgIndex, "m_seqAlgIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgPosition", (void*)&m_seqAlgPosition);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint8_t> > >", (void*)&m_seqAlgPosition, "m_seqAlgPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgNameID", (void*)&m_seqAlgNameID);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_seqAlgNameID, "m_seqAlgNameID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgTypeID", (void*)&m_seqAlgTypeID);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<uint32_t> > >", (void*)&m_seqAlgTypeID, "m_seqAlgTypeID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgName", (void*)&m_seqAlgName);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<std::string> > >", (void*)&m_seqAlgName, "m_seqAlgName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_seqAlgTypeName", (void*)&m_seqAlgTypeName);
      R__insp.InspectMember("map<DBKeys_t,std::vector<std::vector<std::string> > >", (void*)&m_seqAlgTypeName, "m_seqAlgTypeName.", false);
      TNamed::ShowMembers(R__insp);
      R__insp.GenericShowMembers("D3PD::IITrigConfigSvcD3PD", ( ::D3PD::IITrigConfigSvcD3PD *) (this ), false);
}

} // namespace D3PD
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      return  p ? new(p) ::D3PD::TrigConfigSvcD3PD : new ::D3PD::TrigConfigSvcD3PD;
   }
   static void *newArray_D3PDcLcLTrigConfigSvcD3PD(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::TrigConfigSvcD3PD[nElements] : new ::D3PD::TrigConfigSvcD3PD[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      delete ((::D3PD::TrigConfigSvcD3PD*)p);
   }
   static void deleteArray_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      delete [] ((::D3PD::TrigConfigSvcD3PD*)p);
   }
   static void destruct_D3PDcLcLTrigConfigSvcD3PD(void *p) {
      typedef ::D3PD::TrigConfigSvcD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::TrigConfigSvcD3PD

      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
void DataAccess::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::Trig::DataAccess.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::Trig::DataAccess::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::Trig::DataAccess::Class(),this);
   }
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
//______________________________________________________________________________
      namespace D3PD {
         namespace Trig {
void DataAccess::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class D3PD::Trig::DataAccess.
      TClass *R__cl = ::D3PD::Trig::DataAccess::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_tree", &m_tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_prefix", &m_prefix);
      R__insp.InspectMember(m_prefix, "m_prefix.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_initialized", &m_initialized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_detailLevel", &m_detailLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trigCostTreeName", &m_trigCostTreeName);
      R__insp.InspectMember(m_trigCostTreeName, "m_trigCostTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_entry", &m_entry);
      TNamed::ShowMembers(R__insp);
      R__insp.GenericShowMembers("D3PD::Trig::IDataAccess", ( ::D3PD::Trig::IDataAccess *) (this ), false);
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLTrigcLcLDataAccess(void *p) {
      return  p ? new(p) ::D3PD::Trig::DataAccess : new ::D3PD::Trig::DataAccess;
   }
   static void *newArray_D3PDcLcLTrigcLcLDataAccess(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::Trig::DataAccess[nElements] : new ::D3PD::Trig::DataAccess[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLDataAccess(void *p) {
      delete ((::D3PD::Trig::DataAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLDataAccess(void *p) {
      delete [] ((::D3PD::Trig::DataAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLDataAccess(void *p) {
      typedef ::D3PD::Trig::DataAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::DataAccess

      namespace D3PD {
         namespace Trig {
//______________________________________________________________________________
void ConfigAccess::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::Trig::ConfigAccess.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::Trig::ConfigAccess::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::Trig::ConfigAccess::Class(),this);
   }
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
//______________________________________________________________________________
      namespace D3PD {
         namespace Trig {
void ConfigAccess::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class D3PD::Trig::ConfigAccess.
      TClass *R__cl = ::D3PD::Trig::ConfigAccess::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_configSvc", &m_configSvc);
      R__insp.InspectMember(m_configSvc, "m_configSvc.");
      TNamed::ShowMembers(R__insp);
      R__insp.GenericShowMembers("D3PD::Trig::IConfigAccess", ( ::D3PD::Trig::IConfigAccess *) (this ), false);
      R__insp.GenericShowMembers("D3PD::Trig::IDataAccess", ( ::D3PD::Trig::IDataAccess *) (this ), false);
}

} // namespace D3PD::Trig
} // namespace D3PD::Trig
namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLConfigAccess(void *p) {
      delete ((::D3PD::Trig::ConfigAccess*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLConfigAccess(void *p) {
      delete [] ((::D3PD::Trig::ConfigAccess*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLConfigAccess(void *p) {
      typedef ::D3PD::Trig::ConfigAccess current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::ConfigAccess

//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLTrigcLcLChainGroupHandling_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class D3PD::Trig::ChainGroupHandling.
      typedef ::ROOT::Shadow::D3PD::Trig::ChainGroupHandling ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::ChainGroupHandling*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("D3PD::IITrigDecisionToolD3PD", ( ::D3PD::IITrigDecisionToolD3PD * )( (::D3PD::Trig::ChainGroupHandling*) obj ), false);
      R__insp.GenericShowMembers("D3PD::Trig::IDataAccess", ( ::D3PD::Trig::IDataAccess * )( (::D3PD::Trig::ChainGroupHandling*) obj ), false);
      R__insp.GenericShowMembers("D3PD::Trig::IConfigAccess", ( ::D3PD::Trig::IConfigAccess * )( (::D3PD::Trig::ChainGroupHandling*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLChainGroupHandling(void *p) {
      delete ((::D3PD::Trig::ChainGroupHandling*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLChainGroupHandling(void *p) {
      delete [] ((::D3PD::Trig::ChainGroupHandling*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLChainGroupHandling(void *p) {
      typedef ::D3PD::Trig::ChainGroupHandling current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::ChainGroupHandling

//______________________________________________________________________________
namespace ROOT {
   void D3PDcLcLTrigcLcLTrigDecisionFunctions_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class D3PD::Trig::TrigDecisionFunctions.
      typedef ::ROOT::Shadow::D3PD::Trig::TrigDecisionFunctions ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::D3PD::Trig::TrigDecisionFunctions*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("D3PD::IITrigDecisionToolD3PD", ( ::D3PD::IITrigDecisionToolD3PD * )( (::D3PD::Trig::TrigDecisionFunctions*) obj ), false);
      R__insp.GenericShowMembers("D3PD::Trig::IDataAccess", ( ::D3PD::Trig::IDataAccess * )( (::D3PD::Trig::TrigDecisionFunctions*) obj ), false);
      R__insp.GenericShowMembers("D3PD::Trig::IConfigAccess", ( ::D3PD::Trig::IConfigAccess * )( (::D3PD::Trig::TrigDecisionFunctions*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigcLcLTrigDecisionFunctions(void *p) {
      delete ((::D3PD::Trig::TrigDecisionFunctions*)p);
   }
   static void deleteArray_D3PDcLcLTrigcLcLTrigDecisionFunctions(void *p) {
      delete [] ((::D3PD::Trig::TrigDecisionFunctions*)p);
   }
   static void destruct_D3PDcLcLTrigcLcLTrigDecisionFunctions(void *p) {
      typedef ::D3PD::Trig::TrigDecisionFunctions current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::Trig::TrigDecisionFunctions

      namespace D3PD {
//______________________________________________________________________________
void TrigDecisionToolD3PD::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::TrigDecisionToolD3PD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::TrigDecisionToolD3PD::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::TrigDecisionToolD3PD::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void TrigDecisionToolD3PD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class D3PD::TrigDecisionToolD3PD.
      TClass *R__cl = ::D3PD::TrigDecisionToolD3PD::IsA();
      if (R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp);
      R__insp.GenericShowMembers("D3PD::IITrigDecisionToolD3PD", ( ::D3PD::IITrigDecisionToolD3PD *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef D3PD::Trig::DataAccess baseClass3;
      baseClass3::ShowMembers(R__insp);
      //This works around a msvc bug and should be harmless on other platforms
      typedef D3PD::Trig::ConfigAccess baseClass4;
      baseClass4::ShowMembers(R__insp);
      R__insp.GenericShowMembers("D3PD::Trig::ChainGroupHandling", ( ::D3PD::Trig::ChainGroupHandling *) (this ), false);
      R__insp.GenericShowMembers("D3PD::Trig::TrigDecisionFunctions", ( ::D3PD::Trig::TrigDecisionFunctions *) (this ), false);
}

} // namespace D3PD
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      return  p ? new(p) ::D3PD::TrigDecisionToolD3PD : new ::D3PD::TrigDecisionToolD3PD;
   }
   static void *newArray_D3PDcLcLTrigDecisionToolD3PD(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::TrigDecisionToolD3PD[nElements] : new ::D3PD::TrigDecisionToolD3PD[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      delete ((::D3PD::TrigDecisionToolD3PD*)p);
   }
   static void deleteArray_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      delete [] ((::D3PD::TrigDecisionToolD3PD*)p);
   }
   static void destruct_D3PDcLcLTrigDecisionToolD3PD(void *p) {
      typedef ::D3PD::TrigDecisionToolD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::TrigDecisionToolD3PD

      namespace D3PD {
//______________________________________________________________________________
void PyTrigDecisionToolD3PD::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::PyTrigDecisionToolD3PD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::PyTrigDecisionToolD3PD::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::PyTrigDecisionToolD3PD::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void PyTrigDecisionToolD3PD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class D3PD::PyTrigDecisionToolD3PD.
      TClass *R__cl = ::D3PD::PyTrigDecisionToolD3PD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_tdt", &m_tdt);
      R__insp.InspectMember(m_tdt, "m_tdt.");
      TNamed::ShowMembers(R__insp);
      R__insp.GenericShowMembers("D3PD::IITrigDecisionToolD3PD", ( ::D3PD::IITrigDecisionToolD3PD *) (this ), false);
}

} // namespace D3PD
namespace ROOT {
   // Wrappers around operator new
   static void *new_D3PDcLcLPyTrigDecisionToolD3PD(void *p) {
      return  p ? new(p) ::D3PD::PyTrigDecisionToolD3PD : new ::D3PD::PyTrigDecisionToolD3PD;
   }
   static void *newArray_D3PDcLcLPyTrigDecisionToolD3PD(Long_t nElements, void *p) {
      return p ? new(p) ::D3PD::PyTrigDecisionToolD3PD[nElements] : new ::D3PD::PyTrigDecisionToolD3PD[nElements];
   }
   // Wrapper around operator delete
   static void delete_D3PDcLcLPyTrigDecisionToolD3PD(void *p) {
      delete ((::D3PD::PyTrigDecisionToolD3PD*)p);
   }
   static void deleteArray_D3PDcLcLPyTrigDecisionToolD3PD(void *p) {
      delete [] ((::D3PD::PyTrigDecisionToolD3PD*)p);
   }
   static void destruct_D3PDcLcLPyTrigDecisionToolD3PD(void *p) {
      typedef ::D3PD::PyTrigDecisionToolD3PD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::PyTrigDecisionToolD3PD

      namespace D3PD {
//______________________________________________________________________________
void ChainGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class D3PD::ChainGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(D3PD::ChainGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(D3PD::ChainGroup::Class(),this);
   }
}

} // namespace D3PD
//______________________________________________________________________________
      namespace D3PD {
void ChainGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class D3PD::ChainGroup.
      TClass *R__cl = ::D3PD::ChainGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_triggerNames", (void*)&m_triggerNames);
      R__insp.InspectMember("const vector<std::string>", (void*)&m_triggerNames, "m_triggerNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_smk", &m_smk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_existingTriggers", (void*)&m_existingTriggers);
      R__insp.InspectMember("vector<std::string>", (void*)&m_existingTriggers, "m_existingTriggers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_existingIDs", (void*)&m_existingIDs);
      R__insp.InspectMember("vector<Int_t>", (void*)&m_existingIDs, "m_existingIDs.", false);
      TNamed::ShowMembers(R__insp);
}

} // namespace D3PD
namespace ROOT {
   // Wrapper around operator delete
   static void delete_D3PDcLcLChainGroup(void *p) {
      delete ((::D3PD::ChainGroup*)p);
   }
   static void deleteArray_D3PDcLcLChainGroup(void *p) {
      delete [] ((::D3PD::ChainGroup*)p);
   }
   static void destruct_D3PDcLcLChainGroup(void *p) {
      typedef ::D3PD::ChainGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::D3PD::ChainGroup

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<string,string>.
      typedef ::ROOT::Shadow::pairlEstringcOstringgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<string,string>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("string", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("string", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,string> : new pair<string,string>;
   }
   static void *newArray_pairlEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,string>[nElements] : new pair<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOstringgR(void *p) {
      delete ((pair<string,string>*)p);
   }
   static void deleteArray_pairlEstringcOstringgR(void *p) {
      delete [] ((pair<string,string>*)p);
   }
   static void destruct_pairlEstringcOstringgR(void *p) {
      typedef pair<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,string>

namespace ROOT {
   void maplEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOfloatgR_Dictionary();
   static void *new_maplEstringcOfloatgR(void *p = 0);
   static void *newArray_maplEstringcOfloatgR(Long_t size, void *p);
   static void delete_maplEstringcOfloatgR(void *p);
   static void deleteArray_maplEstringcOfloatgR(void *p);
   static void destruct_maplEstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,float>*)
   {
      map<string,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,float>", -2, "map.dll", 0,
                  typeid(map<string,float>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,float>) );
      instance.SetNew(&new_maplEstringcOfloatgR);
      instance.SetNewArray(&newArray_maplEstringcOfloatgR);
      instance.SetDelete(&delete_maplEstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOfloatgR);
      instance.SetDestructor(&destruct_maplEstringcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float> : new map<string,float>;
   }
   static void *newArray_maplEstringcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float>[nElements] : new map<string,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOfloatgR(void *p) {
      delete ((map<string,float>*)p);
   }
   static void deleteArray_maplEstringcOfloatgR(void *p) {
      delete [] ((map<string,float>*)p);
   }
   static void destruct_maplEstringcOfloatgR(void *p) {
      typedef map<string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,float>

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.14-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,string>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,string>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.14-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.14-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

namespace ROOT {
   void vectorlEvectorlEstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEstringgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEstringgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEstringgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEstringgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEstringgRsPgR(void *p);
   static void destruct_vectorlEvectorlEstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<string> >*)
   {
      vector<vector<string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<string> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.14-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<string> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEstringgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<string> >) );
      instance.SetNew(&new_vectorlEvectorlEstringgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEstringgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEstringgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEstringgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEstringgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<string> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<string> > : new vector<vector<string> >;
   }
   static void *newArray_vectorlEvectorlEstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<string> >[nElements] : new vector<vector<string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEstringgRsPgR(void *p) {
      delete ((vector<vector<string> >*)p);
   }
   static void deleteArray_vectorlEvectorlEstringgRsPgR(void *p) {
      delete [] ((vector<vector<string> >*)p);
   }
   static void destruct_vectorlEvectorlEstringgRsPgR(void *p) {
      typedef vector<vector<string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<string> >

/********************************************************
* TrigRootAnalysis_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTrigRootAnalysis_Dict();

extern "C" void G__set_cpp_environmentTrigRootAnalysis_Dict() {
  G__cpp_reset_tagtableTrigRootAnalysis_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevTrigRootAnalysis_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* D3PD::Trig::IDataAccess */
static int G__TrigRootAnalysis_Dict_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetDetailLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetSMK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetL1PSK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetHLTPSK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetL1Result((D3PD::Trig::IDataAccess::L1ResultType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetL2Result((D3PD::Trig::IDataAccess::HLTResultType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const D3PD::Trig::IDataAccess*) G__getstructoffset())->GetEFResult((D3PD::Trig::IDataAccess::HLTResultType) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::IDataAccess G__TD3PDcLcLTrigcLcLIDataAccess;
static int G__TrigRootAnalysis_Dict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::IDataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::IDataAccess*) (soff+(sizeof(D3PD::Trig::IDataAccess)*i)))->~G__TD3PDcLcLTrigcLcLIDataAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::IDataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::IDataAccess*) (soff))->~G__TD3PDcLcLTrigcLcLIDataAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::IDataAccess* dest = (D3PD::Trig::IDataAccess*) G__getstructoffset();
   *dest = *(D3PD::Trig::IDataAccess*) libp->para[0].ref;
   const D3PD::Trig::IDataAccess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::IConfigAccess */
static int G__TrigRootAnalysis_Dict_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const D3PD::IITrigConfigSvcD3PD& obj = ((D3PD::Trig::IConfigAccess*) G__getstructoffset())->GetConfigSvc((Bool_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const D3PD::IITrigConfigSvcD3PD& obj = ((D3PD::Trig::IConfigAccess*) G__getstructoffset())->GetConfigSvc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::IConfigAccess G__TD3PDcLcLTrigcLcLIConfigAccess;
static int G__TrigRootAnalysis_Dict_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::IConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::IConfigAccess*) (soff+(sizeof(D3PD::Trig::IConfigAccess)*i)))->~G__TD3PDcLcLTrigcLcLIConfigAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::IConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::IConfigAccess*) (soff))->~G__TD3PDcLcLTrigcLcLIConfigAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::IConfigAccess* dest = (D3PD::Trig::IConfigAccess*) G__getstructoffset();
   *dest = *(D3PD::Trig::IConfigAccess*) libp->para[0].ref;
   const D3PD::Trig::IConfigAccess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::ChainGroupHandling */
// automatic destructor
typedef D3PD::Trig::ChainGroupHandling G__TD3PDcLcLTrigcLcLChainGroupHandling;
static int G__TrigRootAnalysis_Dict_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::ChainGroupHandling*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::ChainGroupHandling*) (soff+(sizeof(D3PD::Trig::ChainGroupHandling)*i)))->~G__TD3PDcLcLTrigcLcLChainGroupHandling();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::ChainGroupHandling*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::ChainGroupHandling*) (soff))->~G__TD3PDcLcLTrigcLcLChainGroupHandling();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::ChainGroupHandling* dest = (D3PD::Trig::ChainGroupHandling*) G__getstructoffset();
   *dest = *(D3PD::Trig::ChainGroupHandling*) libp->para[0].ref;
   const D3PD::Trig::ChainGroupHandling& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::ChainGroup */
static int G__TrigRootAnalysis_Dict_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((D3PD::ChainGroup*) G__getstructoffset())->IsPassed((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((D3PD::ChainGroup*) G__getstructoffset())->IsPassed());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((D3PD::ChainGroup*) G__getstructoffset())->GetPrescale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((D3PD::ChainGroup*) G__getstructoffset())->GetListOfTriggers();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedTriggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedTriggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedL1Triggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedL1Triggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedL2Triggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedL2Triggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedEFTriggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::ChainGroup*) G__getstructoffset())->GetPassedEFTriggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::ChainGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::ChainGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::ChainGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::ChainGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::ChainGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::ChainGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::ChainGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::ChainGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::ChainGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TrigRootAnalysis_Dict_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::ChainGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::ChainGroup(*(D3PD::ChainGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::ChainGroup G__TD3PDcLcLChainGroup;
static int G__TrigRootAnalysis_Dict_190_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::ChainGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::ChainGroup*) (soff+(sizeof(D3PD::ChainGroup)*i)))->~G__TD3PDcLcLChainGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::ChainGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::ChainGroup*) (soff))->~G__TD3PDcLcLChainGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::IITrigConfigSvcD3PD */
static int G__TrigRootAnalysis_Dict_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->IsConfigured(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetCTPId(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetChainId(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetPrescale(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetRerunPrescale(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetPassthrough(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetLowerChainName(*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetNameFromCTPId((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetL2NameFromChainId((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetEFNameFromChainId((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetLVL1Items();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>& obj = ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->GetHLTChains();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->PrintSummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const D3PD::IITrigConfigSvcD3PD*) G__getstructoffset())->PrintConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::IITrigConfigSvcD3PD G__TD3PDcLcLIITrigConfigSvcD3PD;
static int G__TrigRootAnalysis_Dict_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::IITrigConfigSvcD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::IITrigConfigSvcD3PD*) (soff+(sizeof(D3PD::IITrigConfigSvcD3PD)*i)))->~G__TD3PDcLcLIITrigConfigSvcD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::IITrigConfigSvcD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::IITrigConfigSvcD3PD*) (soff))->~G__TD3PDcLcLIITrigConfigSvcD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::IITrigConfigSvcD3PD* dest = (D3PD::IITrigConfigSvcD3PD*) G__getstructoffset();
   *dest = *(D3PD::IITrigConfigSvcD3PD*) libp->para[0].ref;
   const D3PD::IITrigConfigSvcD3PD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::IITrigDecisionToolD3PD */
static int G__TrigRootAnalysis_Dict_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->IsPassed(*(string*) libp->para[0].ref, (D3PD::TrigDefs::DecisionTypes) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->IsPassed(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedTriggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedTriggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedL1Triggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedL1Triggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedL2Triggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedL2Triggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedEFTriggers((D3PD::TrigDefs::DecisionTypes) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetPassedEFTriggers();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         D3PD::ChainGroup* pobj;
         D3PD::ChainGroup xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetChainGroup(*(vector<std::string>*) libp->para[0].ref);
         pobj = new D3PD::ChainGroup(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         D3PD::ChainGroup* pobj;
         D3PD::ChainGroup xobj = ((D3PD::IITrigDecisionToolD3PD*) G__getstructoffset())->GetChainGroup(*(string*) libp->para[0].ref);
         pobj = new D3PD::ChainGroup(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::IITrigDecisionToolD3PD G__TD3PDcLcLIITrigDecisionToolD3PD;
static int G__TrigRootAnalysis_Dict_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::IITrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::IITrigDecisionToolD3PD*) (soff+(sizeof(D3PD::IITrigDecisionToolD3PD)*i)))->~G__TD3PDcLcLIITrigDecisionToolD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::IITrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::IITrigDecisionToolD3PD*) (soff))->~G__TD3PDcLcLIITrigDecisionToolD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::IITrigDecisionToolD3PD* dest = (D3PD::IITrigDecisionToolD3PD*) G__getstructoffset();
   *dest = *(D3PD::IITrigDecisionToolD3PD*) libp->para[0].ref;
   const D3PD::IITrigDecisionToolD3PD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::TrigConfigSvcD3PD */
static int G__TrigRootAnalysis_Dict_440_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::TrigConfigSvcD3PD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigConfigSvcD3PD((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::TrigConfigSvcD3PD((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigConfigSvcD3PD[n];
       } else {
         p = new((void*) gvp) D3PD::TrigConfigSvcD3PD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigConfigSvcD3PD;
       } else {
         p = new((void*) gvp) D3PD::TrigConfigSvcD3PD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->SetConfigTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->Load((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->Load((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->IsAvailable((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSequenceIndex((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSequenceNameFromIndex((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgNameFromSeqIDAndAlgPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgNameIDFromSeqIDAndAlgPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgClassNameFromSeqIDAndAlgPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgClassNameIDFromSeqIDAndAlgPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GenerateSignatureSequenceMap(*((pair<int,std::pair<int,int> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainLevel((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainCounter((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainName((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainEBHypoNameSize((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainEBHypoName((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainGroupNameSize((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetChainGroupName((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSigN((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSigCounter((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSigLogic((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSigLabel((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSigNOutputTE((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSigOutputTE((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSeqN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSeqID((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSeqIndex((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSeqName((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSeqNInputTEs((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetSeqInputTE((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgN((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgIndex((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgPosition((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgNameID((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgName((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgTypeID((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->GetAlgTypeName((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::TrigConfigSvcD3PD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigConfigSvcD3PD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::TrigConfigSvcD3PD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::TrigConfigSvcD3PD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigConfigSvcD3PD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigConfigSvcD3PD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigConfigSvcD3PD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigConfigSvcD3PD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_440_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigConfigSvcD3PD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TrigRootAnalysis_Dict_440_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::TrigConfigSvcD3PD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::TrigConfigSvcD3PD(*(D3PD::TrigConfigSvcD3PD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::TrigConfigSvcD3PD G__TD3PDcLcLTrigConfigSvcD3PD;
static int G__TrigRootAnalysis_Dict_440_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::TrigConfigSvcD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::TrigConfigSvcD3PD*) (soff+(sizeof(D3PD::TrigConfigSvcD3PD)*i)))->~G__TD3PDcLcLTrigConfigSvcD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::TrigConfigSvcD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::TrigConfigSvcD3PD*) (soff))->~G__TD3PDcLcLTrigConfigSvcD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,string,less<string>,allocator<pair<const string,string> > > */
static int G__TrigRootAnalysis_Dict_460_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >;
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator=(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->begin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->end();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rend();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>* pobj;
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool> xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->swap(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_460_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,string,less<string>,allocator<pair<const string,string> > > G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR;
static int G__TrigRootAnalysis_Dict_460_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff+(sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >)*i)))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,string> */
static int G__TrigRootAnalysis_Dict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,string>[n];
     } else {
       p = new((void*) gvp) pair<string,string>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,string>;
     } else {
       p = new((void*) gvp) pair<string,string>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<string,string>(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<string,string>(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TrigRootAnalysis_Dict_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<string,string>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<string,string>(*(pair<string,string>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,string> G__TpairlEstringcOstringgR;
static int G__TrigRootAnalysis_Dict_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<string,string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<string,string>*) (soff+(sizeof(pair<string,string>)*i)))->~G__TpairlEstringcOstringgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<string,string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<string,string>*) (soff))->~G__TpairlEstringcOstringgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */
static int G__TrigRootAnalysis_Dict_600_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->at((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference obj = ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->at((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->resize((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->resize((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]), *((vector<string,allocator<string> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->operator[]((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference obj = ((const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->operator[]((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >;
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]), *(vector<string,allocator<string> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]), *(vector<string,allocator<string> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >& obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->operator=(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->reserve((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->push_back(*(vector<string,allocator<string> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->swap(*(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator* pobj;
         vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator xobj = ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->insert(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), *(vector<string,allocator<string> >*) libp->para[1].ref);
         pobj = new vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->insert(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->insert(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), (vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type) G__int(libp->para[1])
, *(vector<string,allocator<string> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->erase(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->erase(*((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_600_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > G__TvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR;
static int G__TrigRootAnalysis_Dict_600_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) (soff+(sizeof(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >)*i)))->~G__TvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*) (soff))->~G__TvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static int G__TrigRootAnalysis_Dict_611_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *((vector<float,allocator<float> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator=(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->reserve((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->push_back(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->swap(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *(vector<float,allocator<float> >*) libp->para[1].ref);
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[1])
, *(vector<float,allocator<float> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_611_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR;
static int G__TrigRootAnalysis_Dict_611_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff+(sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >)*i)))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::ConfigAccess */
static int G__TrigRootAnalysis_Dict_643_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::Trig::ConfigAccess*) G__getstructoffset())->SetConfigTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::Trig::ConfigAccess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ConfigAccess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::Trig::ConfigAccess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::Trig::ConfigAccess::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::Trig::ConfigAccess*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ConfigAccess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::ConfigAccess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::ConfigAccess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_643_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::ConfigAccess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::ConfigAccess G__TD3PDcLcLTrigcLcLConfigAccess;
static int G__TrigRootAnalysis_Dict_643_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::ConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::ConfigAccess*) (soff+(sizeof(D3PD::Trig::ConfigAccess)*i)))->~G__TD3PDcLcLTrigcLcLConfigAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::ConfigAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::ConfigAccess*) (soff))->~G__TD3PDcLcLTrigcLcLConfigAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::DataAccess */
static int G__TrigRootAnalysis_Dict_653_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::DataAccess* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::Trig::DataAccess((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::Trig::DataAccess[n];
       } else {
         p = new((void*) gvp) D3PD::Trig::DataAccess[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::Trig::DataAccess;
       } else {
         p = new((void*) gvp) D3PD::Trig::DataAccess;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const D3PD::Trig::DataAccess*) G__getstructoffset())->GetEventTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->SetEventTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->WriteToTree((TTree*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->WriteToTree((TTree*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((D3PD::Trig::DataAccess*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::Trig::DataAccess::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::DataAccess::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::Trig::DataAccess::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::Trig::DataAccess::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::Trig::DataAccess*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::DataAccess::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::DataAccess::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::Trig::DataAccess::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_653_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::Trig::DataAccess::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TrigRootAnalysis_Dict_653_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::Trig::DataAccess* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::Trig::DataAccess(*(D3PD::Trig::DataAccess*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::Trig::DataAccess G__TD3PDcLcLTrigcLcLDataAccess;
static int G__TrigRootAnalysis_Dict_653_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::DataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::DataAccess*) (soff+(sizeof(D3PD::Trig::DataAccess)*i)))->~G__TD3PDcLcLTrigcLcLDataAccess();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::DataAccess*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::DataAccess*) (soff))->~G__TD3PDcLcLTrigcLcLDataAccess();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_653_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::DataAccess* dest = (D3PD::Trig::DataAccess*) G__getstructoffset();
   *dest = *(D3PD::Trig::DataAccess*) libp->para[0].ref;
   const D3PD::Trig::DataAccess& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::Trig::TrigDecisionFunctions */
// automatic destructor
typedef D3PD::Trig::TrigDecisionFunctions G__TD3PDcLcLTrigcLcLTrigDecisionFunctions;
static int G__TrigRootAnalysis_Dict_654_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::Trig::TrigDecisionFunctions*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::Trig::TrigDecisionFunctions*) (soff+(sizeof(D3PD::Trig::TrigDecisionFunctions)*i)))->~G__TD3PDcLcLTrigcLcLTrigDecisionFunctions();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::Trig::TrigDecisionFunctions*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::Trig::TrigDecisionFunctions*) (soff))->~G__TD3PDcLcLTrigcLcLTrigDecisionFunctions();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TrigRootAnalysis_Dict_654_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::Trig::TrigDecisionFunctions* dest = (D3PD::Trig::TrigDecisionFunctions*) G__getstructoffset();
   *dest = *(D3PD::Trig::TrigDecisionFunctions*) libp->para[0].ref;
   const D3PD::Trig::TrigDecisionFunctions& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::TrigDecisionToolD3PD */
static int G__TrigRootAnalysis_Dict_655_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::TrigDecisionToolD3PD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigDecisionToolD3PD(
(TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
     } else {
       p = new((void*) gvp) D3PD::TrigDecisionToolD3PD(
(TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::TrigDecisionToolD3PD((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigDecisionToolD3PD[n];
       } else {
         p = new((void*) gvp) D3PD::TrigDecisionToolD3PD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::TrigDecisionToolD3PD;
       } else {
         p = new((void*) gvp) D3PD::TrigDecisionToolD3PD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::TrigDecisionToolD3PD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigDecisionToolD3PD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::TrigDecisionToolD3PD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::TrigDecisionToolD3PD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::TrigDecisionToolD3PD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigDecisionToolD3PD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigDecisionToolD3PD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::TrigDecisionToolD3PD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_655_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::TrigDecisionToolD3PD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TrigRootAnalysis_Dict_655_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::TrigDecisionToolD3PD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::TrigDecisionToolD3PD(*(D3PD::TrigDecisionToolD3PD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::TrigDecisionToolD3PD G__TD3PDcLcLTrigDecisionToolD3PD;
static int G__TrigRootAnalysis_Dict_655_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::TrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::TrigDecisionToolD3PD*) (soff+(sizeof(D3PD::TrigDecisionToolD3PD)*i)))->~G__TD3PDcLcLTrigDecisionToolD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::TrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::TrigDecisionToolD3PD*) (soff))->~G__TD3PDcLcLTrigDecisionToolD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* D3PD::PyTrigDecisionToolD3PD */
static int G__TrigRootAnalysis_Dict_656_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   D3PD::PyTrigDecisionToolD3PD* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::PyTrigDecisionToolD3PD(
(TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
     } else {
       p = new((void*) gvp) D3PD::PyTrigDecisionToolD3PD(
(TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1])
, *(TString*) libp->para[2].ref);
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::PyTrigDecisionToolD3PD((TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) D3PD::PyTrigDecisionToolD3PD((TTree*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new D3PD::PyTrigDecisionToolD3PD((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) D3PD::PyTrigDecisionToolD3PD((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::PyTrigDecisionToolD3PD[n];
       } else {
         p = new((void*) gvp) D3PD::PyTrigDecisionToolD3PD[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new D3PD::PyTrigDecisionToolD3PD;
       } else {
         p = new((void*) gvp) D3PD::PyTrigDecisionToolD3PD;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->GetEventTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->SetEventTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->WriteToTree((TTree*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->WriteToTree((TTree*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->SetConfigTree((TTree*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->GetDetailLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const D3PD::IITrigConfigSvcD3PD& obj = ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->GetConfigSvc((Bool_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const D3PD::IITrigConfigSvcD3PD& obj = ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->GetConfigSvc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) D3PD::PyTrigDecisionToolD3PD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::PyTrigDecisionToolD3PD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) D3PD::PyTrigDecisionToolD3PD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      D3PD::PyTrigDecisionToolD3PD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((D3PD::PyTrigDecisionToolD3PD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::PyTrigDecisionToolD3PD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::PyTrigDecisionToolD3PD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) D3PD::PyTrigDecisionToolD3PD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TrigRootAnalysis_Dict_656_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) D3PD::PyTrigDecisionToolD3PD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TrigRootAnalysis_Dict_656_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   D3PD::PyTrigDecisionToolD3PD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new D3PD::PyTrigDecisionToolD3PD(*(D3PD::PyTrigDecisionToolD3PD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef D3PD::PyTrigDecisionToolD3PD G__TD3PDcLcLPyTrigDecisionToolD3PD;
static int G__TrigRootAnalysis_Dict_656_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (D3PD::PyTrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((D3PD::PyTrigDecisionToolD3PD*) (soff+(sizeof(D3PD::PyTrigDecisionToolD3PD)*i)))->~G__TD3PDcLcLPyTrigDecisionToolD3PD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (D3PD::PyTrigDecisionToolD3PD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((D3PD::PyTrigDecisionToolD3PD*) (soff))->~G__TD3PDcLcLPyTrigDecisionToolD3PD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* D3PD::Trig::IDataAccess */

/* D3PD::Trig::IConfigAccess */

/* D3PD::Trig::ChainGroupHandling */

/* D3PD::ChainGroup */

/* D3PD::IITrigConfigSvcD3PD */

/* D3PD::IITrigDecisionToolD3PD */

/* D3PD::TrigConfigSvcD3PD */

/* map<string,string,less<string>,allocator<pair<const string,string> > > */

/* pair<string,string> */

/* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */

/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */

/* D3PD::Trig::ConfigAccess */

/* D3PD::Trig::DataAccess */

/* D3PD::Trig::TrigDecisionFunctions */

/* D3PD::TrigDecisionToolD3PD */

/* D3PD::PyTrigDecisionToolD3PD */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTrigRootAnalysis_Dict {
 public:
  G__Sizep2memfuncTrigRootAnalysis_Dict(): p(&G__Sizep2memfuncTrigRootAnalysis_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTrigRootAnalysis_Dict::*p)();
};

size_t G__get_sizep2memfuncTrigRootAnalysis_Dict()
{
  G__Sizep2memfuncTrigRootAnalysis_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLIITrigDecisionToolD3PD_0(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  D3PD::IITrigDecisionToolD3PD *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIDataAccess_1(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIConfigAccess_2(long pobject) {
  D3PD::Trig::ChainGroupHandling *G__Lderived=(D3PD::Trig::ChainGroupHandling*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TNamed_0(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TObject_1(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_D3PDcLcLTrigcLcLIConfigAccess_2(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLConfigAccess_D3PDcLcLTrigcLcLIDataAccess_3(long pobject) {
  D3PD::Trig::ConfigAccess *G__Lderived=(D3PD::Trig::ConfigAccess*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLDataAccess_TNamed_0(long pobject) {
  D3PD::Trig::DataAccess *G__Lderived=(D3PD::Trig::DataAccess*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLDataAccess_TObject_1(long pobject) {
  D3PD::Trig::DataAccess *G__Lderived=(D3PD::Trig::DataAccess*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLDataAccess_D3PDcLcLTrigcLcLIDataAccess_2(long pobject) {
  D3PD::Trig::DataAccess *G__Lderived=(D3PD::Trig::DataAccess*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLTrigDecisionFunctions_D3PDcLcLIITrigDecisionToolD3PD_0(long pobject) {
  D3PD::Trig::TrigDecisionFunctions *G__Lderived=(D3PD::Trig::TrigDecisionFunctions*)pobject;
  D3PD::IITrigDecisionToolD3PD *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLTrigDecisionFunctions_D3PDcLcLTrigcLcLIDataAccess_1(long pobject) {
  D3PD::Trig::TrigDecisionFunctions *G__Lderived=(D3PD::Trig::TrigDecisionFunctions*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigcLcLTrigDecisionFunctions_D3PDcLcLTrigcLcLIConfigAccess_2(long pobject) {
  D3PD::Trig::TrigDecisionFunctions *G__Lderived=(D3PD::Trig::TrigDecisionFunctions*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_0(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_1(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLIITrigDecisionToolD3PD_2(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::IITrigDecisionToolD3PD *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_4(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_5(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_6(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_8(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TNamed *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_9(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  TObject *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_10(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_11(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLIITrigDecisionToolD3PD_13(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::IITrigDecisionToolD3PD *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_14(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_15(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLIITrigDecisionToolD3PD_17(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::IITrigDecisionToolD3PD *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_18(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IDataAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_19(long pobject) {
  D3PD::TrigDecisionToolD3PD *G__Lderived=(D3PD::TrigDecisionToolD3PD*)pobject;
  D3PD::Trig::IConfigAccess *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTrigRootAnalysis_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLIITrigDecisionToolD3PD_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIDataAccess_1,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigcLcLChainGroupHandling_D3PDcLcLTrigcLcLIConfigAccess_2,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup))) {
     D3PD::ChainGroup *G__Lderived;
     G__Lderived=(D3PD::ChainGroup*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD))) {
     D3PD::TrigConfigSvcD3PD *G__Lderived;
     G__Lderived=(D3PD::TrigConfigSvcD3PD*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       D3PD::IITrigConfigSvcD3PD *G__Lpbase=(D3PD::IITrigConfigSvcD3PD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_TObject_1,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_D3PDcLcLTrigcLcLIConfigAccess_2,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigcLcLConfigAccess_D3PDcLcLTrigcLcLIDataAccess_3,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigcLcLDataAccess_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigcLcLDataAccess_TObject_1,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigcLcLDataAccess_D3PDcLcLTrigcLcLIDataAccess_2,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions))) {
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),(long)G__2vbo_D3PDcLcLTrigcLcLTrigDecisionFunctions_D3PDcLcLIITrigDecisionToolD3PD_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigcLcLTrigDecisionFunctions_D3PDcLcLTrigcLcLIDataAccess_1,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigcLcLTrigDecisionFunctions_D3PDcLcLTrigcLcLIConfigAccess_2,1,3);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD))) {
     D3PD::TrigDecisionToolD3PD *G__Lderived;
     G__Lderived=(D3PD::TrigDecisionToolD3PD*)0x1000;
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_0,1,3);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_1,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLIITrigDecisionToolD3PD_2,1,3);
     }
     {
       D3PD::Trig::DataAccess *G__Lpbase=(D3PD::Trig::DataAccess*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_4,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_5,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_6,1,2);
     }
     {
       D3PD::Trig::ConfigAccess *G__Lpbase=(D3PD::Trig::ConfigAccess*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TNamed_8,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_TObject_9,1,6);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_10,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_11,1,2);
     }
     {
       D3PD::Trig::ChainGroupHandling *G__Lpbase=(D3PD::Trig::ChainGroupHandling*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLIITrigDecisionToolD3PD_13,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_14,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_15,1,2);
     }
     {
       D3PD::Trig::TrigDecisionFunctions *G__Lpbase=(D3PD::Trig::TrigDecisionFunctions*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLIITrigDecisionToolD3PD_17,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIDataAccess_18,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),(long)G__2vbo_D3PDcLcLTrigDecisionToolD3PD_D3PDcLcLTrigcLcLIConfigAccess_19,1,2);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD))) {
     D3PD::PyTrigDecisionToolD3PD *G__Lderived;
     G__Lderived=(D3PD::PyTrigDecisionToolD3PD*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       D3PD::IITrigDecisionToolD3PD *G__Lpbase=(D3PD::IITrigDecisionToolD3PD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD),G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTrigRootAnalysis_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("value_type",115,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",83,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",83,-1,256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",115,-1,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",115,-1,257,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",105,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOintgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",102,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOfloatgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<::Int_t,::Int_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<::Int_t,std::pair<::Int_t,::Int_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DBKeys_t",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<int,std::pair<int,int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<std::string,int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<string,int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<string,int,less<string>,allocator<pair<const string,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<string,int,less<string>,allocator<pair<const string,int> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,float>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<std::string,float> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<string,float> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<string,float,less<string>,allocator<pair<const string,float> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<string,float,less<string>,allocator<pair<const string,float> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<std::string,std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<string,std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<string,string,less<string>,allocator<pair<const string,string> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<string,string,less<string>,allocator<pair<const string,string> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<unsigned int,unsigned int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,string,less<unsigned int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<unsigned int,std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<unsigned int,string,less<unsigned int>,allocator<pair<const unsigned int,string> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<unsigned int,string,less<unsigned int>,allocator<pair<const unsigned int,string> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::pair<int,int>,std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,string,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<std::pair<int,int>,std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<pair<int,int>,std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<pair<int,int>,string,less<pair<int,int> >,allocator<pair<const pair<int,int>,string> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<pair<int,int>,string,less<pair<int,int> >,allocator<pair<const pair<int,int>,string> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::pair<int,int>,unsigned int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,unsigned int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,unsigned int>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,unsigned int,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<std::pair<int,int>,unsigned int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<pair<int,int>,unsigned int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<pair<int,int>,unsigned int,less<pair<int,int> >,allocator<pair<const pair<int,int>,unsigned int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<pair<int,int>,unsigned int,less<pair<int,int> >,allocator<pair<const pair<int,int>,unsigned int> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::map<int,std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<int,string,less<int>,allocator<pair<const int,string> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,map<int,string,less<int>,allocator<pair<const int,string> > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<string,allocator<string> >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,uint16_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,unsigned short>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,unsigned short,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint32_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<uint32_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<unsigned int,allocator<unsigned int> >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint16_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<uint16_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<unsigned short,allocator<unsigned short> >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<uint32_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<uint32_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<std::vector<uint32_t> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<vector<uint32_t> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint8_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<uint8_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<unsigned char,allocator<unsigned char> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<unsigned char,allocator<unsigned char> >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<float> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<float,allocator<float> >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<std::string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),257,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<std::vector<std::string> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<vector<string> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<std::vector<float> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<vector<float> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<uint16_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<uint16_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<std::vector<uint16_t> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<vector<uint16_t> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<uint8_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<uint8_t> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned char,allocator<unsigned char> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<std::vector<uint8_t> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<DBKeys_t,std::vector<vector<uint8_t> > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,pair<int,int> >,vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >,less<pair<int,pair<int,int> > > >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<::Long64_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<::Float_t>",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string> >",117,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* D3PD::Trig::IDataAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLIDataAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess));
   { D3PD::Trig::IDataAccess *p; p=(D3PD::Trig::IDataAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType),-1,-2,1,G__FastAllocString(4096).Format("TBP=%lldLL",(long long)D3PD::Trig::IDataAccess::TBP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType),-1,-2,1,G__FastAllocString(4096).Format("TAP=%lldLL",(long long)D3PD::Trig::IDataAccess::TAP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType),-1,-2,1,G__FastAllocString(4096).Format("TAV=%lldLL",(long long)D3PD::Trig::IDataAccess::TAV).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,G__FastAllocString(4096).Format("Physics=%lldLL",(long long)D3PD::Trig::IDataAccess::Physics).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,G__FastAllocString(4096).Format("Raw=%lldLL",(long long)D3PD::Trig::IDataAccess::Raw).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,G__FastAllocString(4096).Format("Resurrected=%lldLL",(long long)D3PD::Trig::IDataAccess::Resurrected).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType),-1,-2,1,G__FastAllocString(4096).Format("PassedThrough=%lldLL",(long long)D3PD::Trig::IDataAccess::PassedThrough).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::IConfigAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLIConfigAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess));
   { D3PD::Trig::IConfigAccess *p; p=(D3PD::Trig::IConfigAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::ChainGroupHandling */
static void G__setup_memvarD3PDcLcLTrigcLcLChainGroupHandling(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling));
   { D3PD::Trig::ChainGroupHandling *p; p=(D3PD::Trig::ChainGroupHandling*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* D3PD::ChainGroup */
static void G__setup_memvarD3PDcLcLChainGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup));
   { D3PD::ChainGroup *p; p=(D3PD::ChainGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),-1,-1,4,"m_parent=",0,"/< Interface for accessing the trigger data");
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),-1,-1,4,"m_configSvc=",0,"/< Accessor to the configuration service");
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_triggerNames=",0,"/< The names given by the user");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_smk=",0,"/< The last SMK that was used to update the object");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_existingTriggers=",0,"/< Names of the triggers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"m_existingIDs=",0,"/< IDs of the triggers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::IITrigConfigSvcD3PD */
static void G__setup_memvarD3PDcLcLIITrigConfigSvcD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD));
   { D3PD::IITrigConfigSvcD3PD *p; p=(D3PD::IITrigConfigSvcD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::IITrigDecisionToolD3PD */
static void G__setup_memvarD3PDcLcLIITrigDecisionToolD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD));
   { D3PD::IITrigDecisionToolD3PD *p; p=(D3PD::IITrigDecisionToolD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::TrigConfigSvcD3PD */
static void G__setup_memvarD3PDcLcLTrigConfigSvcD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   { D3PD::TrigConfigSvcD3PD *p; p=(D3PD::TrigConfigSvcD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,int> >"),-1,4,"m_lvl1NameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,float> >"),-1,4,"m_lvl1PrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,int> >"),-1,4,"m_hltNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,float> >"),-1,4,"m_hltPrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,float> >"),-1,4,"m_hltRerunPrescaleMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,float> >"),-1,4,"m_hltPassthroughMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::string,std::string> >"),-1,4,"m_lowerChainNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<unsigned int,unsigned int> >"),-1,4,"m_TEIndexMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<unsigned int,std::string> >"),-1,4,"m_hltSequenceNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::pair<int,int>,std::string> >"),-1,4,"m_hltAlgorithmNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::pair<int,int>,unsigned int> >"),-1,4,"m_hltAlgorithmNameIDMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::pair<int,int>,std::string> >"),-1,4,"m_hltAlgorithmTypeMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<std::pair<int,int>,unsigned int> >"),-1,4,"m_hltAlgorithmTypeIDMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_initialized=",0,"/< Internal status flag");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR),G__defined_typename("DBKeys_t"),-1,4,"m_key=",0,"/< Current configuration key");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<int,std::string> >"),-1,4,"m_lvl1IDMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<int,std::string> >"),-1,4,"m_lvl2IDMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::map<int,std::string> >"),-1,4,"m_efIDMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::string> >"),-1,4,"m_confLVL1Items=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::string> >"),-1,4,"m_confHLTChains=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),-1,-1,4,"m_dummy=",0,"/< Dummy string needed for technical reasons");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"m_dummyVec=",0,"/< Dummy vector");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR),G__defined_typename("map<DBKeys_t,uint16_t>"),-1,4,"m_chainN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint32_t> >"),-1,4,"m_chainID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint16_t> >"),-1,4,"m_chainCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::string> >"),-1,4,"m_chainName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint32_t> >"),-1,4,"m_chainLowerID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_chainLowerIDs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::string> >"),-1,4,"m_chainLowerName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint16_t> >"),-1,4,"m_chainLowerCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint8_t> >"),-1,4,"m_chainLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<float> >"),-1,4,"m_chainPrescale=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<float> >"),-1,4,"m_chainPassthrough=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<std::string> > >"),-1,4,"m_chainStreamNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<float> > >"),-1,4,"m_chainStreamPrescales=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<std::string> > >"),-1,4,"m_chainGroupNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<std::string> > >"),-1,4,"m_chainEBHypoNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint16_t> >"),-1,4,"m_chainSigN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_chainSigCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_chainSigLogic=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<std::string> > >"),-1,4,"m_chainSigLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint16_t> > >"),-1,4,"m_chainSigOutputTEn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_chainSigOutputTEIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_chainSigOutputTEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR),G__defined_typename("map<DBKeys_t,uint16_t>"),-1,4,"m_seqN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint32_t> >"),-1,4,"m_seqID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint16_t> >"),-1,4,"m_seqIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::string> >"),-1,4,"m_seqName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint32_t> >"),-1,4,"m_seqTopoTEID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_seqInputTEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<uint16_t> >"),-1,4,"m_seqAlgN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint16_t> > >"),-1,4,"m_seqAlgIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint8_t> > >"),-1,4,"m_seqAlgPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_seqAlgNameID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<uint32_t> > >"),-1,4,"m_seqAlgTypeID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<std::string> > >"),-1,4,"m_seqAlgName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<DBKeys_t,std::vector<std::vector<std::string> > >"),-1,4,"m_seqAlgTypeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
static void G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   { map<string,string,less<string>,allocator<pair<const string,string> > > *p; p=(map<string,string,less<string>,allocator<pair<const string,string> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<string,string> */
static void G__setup_memvarpairlEstringcOstringgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR));
   { pair<string,string> *p; p=(pair<string,string>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */
static void G__setup_memvarvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   { vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > *p; p=(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static void G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   { vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > *p; p=(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::ConfigAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLConfigAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess));
   { D3PD::Trig::ConfigAccess *p; p=(D3PD::Trig::ConfigAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD),-1,-1,4,"m_configSvc=",0,"/< The trigger configuration service");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::DataAccess */
static void G__setup_memvarD3PDcLcLTrigcLcLDataAccess(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess));
   { D3PD::Trig::DataAccess *p; p=(D3PD::Trig::DataAccess*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TTree),-1,-1,4,"m_tree=",0,"/< The event-wise TTree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TString),-1,-1,4,"m_prefix=",0,"/< Prefix for the trigger branch names");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_initialized=",0,"/< Flag for knowing if the branches have been connected");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_detailLevel=",0,"/< The detail level guessed from the available branches");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TString),-1,-1,4,"m_trigCostTreeName=",0,"/< The tree name used by the TrigCost code. Used to identify when dealing with a TrigCost ntuple.");
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"m_entry=",0,"/< The current entry in the event-wise TTree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::Trig::TrigDecisionFunctions */
static void G__setup_memvarD3PDcLcLTrigcLcLTrigDecisionFunctions(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions));
   { D3PD::Trig::TrigDecisionFunctions *p; p=(D3PD::Trig::TrigDecisionFunctions*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* D3PD::TrigDecisionToolD3PD */
static void G__setup_memvarD3PDcLcLTrigDecisionToolD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   { D3PD::TrigDecisionToolD3PD *p; p=(D3PD::TrigDecisionToolD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* D3PD::PyTrigDecisionToolD3PD */
static void G__setup_memvarD3PDcLcLPyTrigDecisionToolD3PD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD));
   { D3PD::PyTrigDecisionToolD3PD *p; p=(D3PD::PyTrigDecisionToolD3PD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),-1,-1,4,"m_tdt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTrigRootAnalysis_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncD3PDcLcLTrigcLcLIDataAccess(void) {
   /* D3PD::Trig::IDataAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess));
   G__memfunc_setup("GetDetailLevel",1387,G__TrigRootAnalysis_Dict_187_0_1, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetSMK",523,G__TrigRootAnalysis_Dict_187_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL1PSK",651,G__TrigRootAnalysis_Dict_187_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetHLTPSK",758,G__TrigRootAnalysis_Dict_187_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL1Result",1052,G__TrigRootAnalysis_Dict_187_0_5, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned int>"), 0, 1, 1, 1, 9, "i 'D3PD::Trig::IDataAccess::L1ResultType' - 0 - type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL2Result",1053,G__TrigRootAnalysis_Dict_187_0_6, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 1, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEFResult",1066,G__TrigRootAnalysis_Dict_187_0_7, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 1, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IDataAccess", 1171, G__TrigRootAnalysis_Dict_187_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_187_0_9, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::IDataAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLIConfigAccess(void) {
   /* D3PD::Trig::IConfigAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess));
   G__memfunc_setup("GetConfigSvc",1186,G__TrigRootAnalysis_Dict_188_0_1, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD), -1, 1, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' update", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IConfigAccess", 1391, G__TrigRootAnalysis_Dict_188_0_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_188_0_3, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::IConfigAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLChainGroupHandling(void) {
   /* D3PD::Trig::ChainGroupHandling */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling));
   G__memfunc_setup("GetChainGroup",1296,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - patterns", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChainGroup",1296,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - pattern", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~ChainGroupHandling", 1939, G__TrigRootAnalysis_Dict_189_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_189_0_4, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::ChainGroupHandling' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLChainGroup(void) {
   /* D3PD::ChainGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup));
   G__memfunc_setup("ChainGroup",1008,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 3, 1, 2, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - triggerNames u 'D3PD::Trig::IDataAccess' - 11 - parent "
"u 'D3PD::Trig::IConfigAccess' - 1 - svc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPassed",796,G__TrigRootAnalysis_Dict_190_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrescale",1103,G__TrigRootAnalysis_Dict_190_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfTriggers",1720,G__TrigRootAnalysis_Dict_190_0_4, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPassedTriggers",1735,G__TrigRootAnalysis_Dict_190_0_5, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPassedL1Triggers",1860,G__TrigRootAnalysis_Dict_190_0_6, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPassedL2Triggers",1861,G__TrigRootAnalysis_Dict_190_0_7, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPassedEFTriggers",1874,G__TrigRootAnalysis_Dict_190_0_8, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ToVector",822,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 3, 4, 0, "u 'string' - 11 - names", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TrigRootAnalysis_Dict_190_0_11, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::ChainGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TrigRootAnalysis_Dict_190_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::ChainGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TrigRootAnalysis_Dict_190_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::ChainGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TrigRootAnalysis_Dict_190_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::ChainGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TrigRootAnalysis_Dict_190_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TrigRootAnalysis_Dict_190_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::ChainGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TrigRootAnalysis_Dict_190_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::ChainGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TrigRootAnalysis_Dict_190_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::ChainGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TrigRootAnalysis_Dict_190_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::ChainGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ChainGroup", 1008, G__TrigRootAnalysis_Dict_190_0_23, (int) ('i'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'D3PD::ChainGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChainGroup", 1134, G__TrigRootAnalysis_Dict_190_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLIITrigConfigSvcD3PD(void) {
   /* D3PD::IITrigConfigSvcD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD));
   G__memfunc_setup("IsConfigured",1218,G__TrigRootAnalysis_Dict_201_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetCTPId",692,G__TrigRootAnalysis_Dict_201_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetChainId",944,G__TrigRootAnalysis_Dict_201_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrescale",1103,G__TrigRootAnalysis_Dict_201_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRerunPrescale",1627,G__TrigRootAnalysis_Dict_201_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPassthrough",1464,G__TrigRootAnalysis_Dict_201_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLowerChainName",1677,G__TrigRootAnalysis_Dict_201_0_7, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNameFromCTPId",1481,G__TrigRootAnalysis_Dict_201_0_8, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - ctpid", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetL2NameFromChainId",1859,G__TrigRootAnalysis_Dict_201_0_9, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - chainid", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEFNameFromChainId",1872,G__TrigRootAnalysis_Dict_201_0_10, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - chainid", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLVL1Items",1089,G__TrigRootAnalysis_Dict_201_0_11, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetHLTChains",1118,G__TrigRootAnalysis_Dict_201_0_12, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintSummary",1275,G__TrigRootAnalysis_Dict_201_0_13, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintConfig",1123,G__TrigRootAnalysis_Dict_201_0_14, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IITrigConfigSvcD3PD", 1843, G__TrigRootAnalysis_Dict_201_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_201_0_16, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD), -1, 1, 1, 1, 1, 0, "u 'D3PD::IITrigConfigSvcD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLIITrigDecisionToolD3PD(void) {
   /* D3PD::IITrigDecisionToolD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD));
   G__memfunc_setup("IsPassed",796,G__TrigRootAnalysis_Dict_202_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - name i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPassedTriggers",1735,G__TrigRootAnalysis_Dict_202_0_2, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPassedL1Triggers",1860,G__TrigRootAnalysis_Dict_202_0_3, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPassedL2Triggers",1861,G__TrigRootAnalysis_Dict_202_0_4, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPassedEFTriggers",1874,G__TrigRootAnalysis_Dict_202_0_5, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetChainGroup",1296,G__TrigRootAnalysis_Dict_202_0_6, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - patterns", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetChainGroup",1296,G__TrigRootAnalysis_Dict_202_0_7, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - pattern", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~IITrigDecisionToolD3PD", 2173, G__TrigRootAnalysis_Dict_202_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_202_0_9, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD), -1, 1, 1, 1, 1, 0, "u 'D3PD::IITrigDecisionToolD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigConfigSvcD3PD(void) {
   /* D3PD::TrigConfigSvcD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD));
   G__memfunc_setup("TrigConfigSvcD3PD",1571,G__TrigRootAnalysis_Dict_440_0_1, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfigTree",1298,G__TrigRootAnalysis_Dict_440_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__TrigRootAnalysis_Dict_440_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - SMK i - 'Int_t' 0 - L1PSK "
"i - 'Int_t' 0 - HLTPSK g - 'Bool_t' 0 'kFALSE' silent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAvailable",1085,G__TrigRootAnalysis_Dict_440_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - SMK i - 'Int_t' 0 - L1PSK "
"i - 'Int_t' 0 - HLTPSK", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsConfigured",1218,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCTPId",692,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChainId",944,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrescale",1103,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRerunPrescale",1627,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassthrough",1464,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLowerChainName",1677,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNameFromCTPId",1481,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - ctpid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL2NameFromChainId",1859,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - chainid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEFNameFromChainId",1872,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - chainid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLVL1Items",1089,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHLTChains",1118,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSummary",1275,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintConfig",1123,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSequenceIndex",1617,G__TrigRootAnalysis_Dict_440_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - outputTE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSequenceNameFromIndex",2406,G__TrigRootAnalysis_Dict_440_0_20, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 9, "h - - 0 - _index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgNameFromSeqIDAndAlgPos",2648,G__TrigRootAnalysis_Dict_440_0_21, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 2, 1, 1, 9, 
"i - - 0 - _sequenceID i - - 0 - _algorithmPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgNameIDFromSeqIDAndAlgPos",2789,G__TrigRootAnalysis_Dict_440_0_22, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"i - - 0 - _sequenceID i - - 0 - _algorithmPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgClassNameFromSeqIDAndAlgPos",3150,G__TrigRootAnalysis_Dict_440_0_23, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 2, 1, 1, 9, 
"i - - 0 - _sequenceID i - - 0 - _algorithmPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgClassNameIDFromSeqIDAndAlgPos",3291,G__TrigRootAnalysis_Dict_440_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"i - - 0 - _sequenceID i - - 0 - _algorithmPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateSignatureSequenceMap",2868,G__TrigRootAnalysis_Dict_440_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<int,pair<int,int> >' 'pair<int,std::pair<int,int> >' 0 - _keys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainN",849,G__TrigRootAnalysis_Dict_440_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainLevel",1275,G__TrigRootAnalysis_Dict_440_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainCounter",1507,G__TrigRootAnalysis_Dict_440_0_28, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainName",1156,G__TrigRootAnalysis_Dict_440_0_29, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainEBHypoNameSize",2118,G__TrigRootAnalysis_Dict_440_0_30, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainEBHypoName",1707,G__TrigRootAnalysis_Dict_440_0_31, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainGroupNameSize",2092,G__TrigRootAnalysis_Dict_440_0_32, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainGroupName",1681,G__TrigRootAnalysis_Dict_440_0_33, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _g", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigN",657,G__TrigRootAnalysis_Dict_440_0_34, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigCounter",1315,G__TrigRootAnalysis_Dict_440_0_35, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigLogic",1073,G__TrigRootAnalysis_Dict_440_0_36, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigLabel",1059,G__TrigRootAnalysis_Dict_440_0_37, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigNOutputTE",1467,G__TrigRootAnalysis_Dict_440_0_38, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigOutputTE",1389,G__TrigRootAnalysis_Dict_440_0_39, 104, -1, G__defined_typename("UInt_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - _c h - 'UInt_t' 0 - _s "
"h - 'UInt_t' 0 - _t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqN",663,G__TrigRootAnalysis_Dict_440_0_40, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqID",726,G__TrigRootAnalysis_Dict_440_0_41, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqIndex",1089,G__TrigRootAnalysis_Dict_440_0_42, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqName",970,G__TrigRootAnalysis_Dict_440_0_43, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqNInputTEs",1459,G__TrigRootAnalysis_Dict_440_0_44, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeqInputTE",1266,G__TrigRootAnalysis_Dict_440_0_45, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgN",642,G__TrigRootAnalysis_Dict_440_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - _s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgIndex",1068,G__TrigRootAnalysis_Dict_440_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgPosition",1417,G__TrigRootAnalysis_Dict_440_0_48, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgNameID",1090,G__TrigRootAnalysis_Dict_440_0_49, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgName",949,G__TrigRootAnalysis_Dict_440_0_50, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgTypeID",1123,G__TrigRootAnalysis_Dict_440_0_51, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgTypeName",1367,G__TrigRootAnalysis_Dict_440_0_52, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - _s h - 'UInt_t' 0 - _a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTriggerNames",1835,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDBKeys",928,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR), G__defined_typename("D3PD::TrigConfigSvcD3PD::DBKeys_t"), 0, 3, 3, 4, 0, 
"i - 'Int_t' 0 - SMK i - 'Int_t' 0 - L1PSK "
"i - 'Int_t' 0 - HLTPSK", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TrigRootAnalysis_Dict_440_0_57, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::TrigConfigSvcD3PD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TrigRootAnalysis_Dict_440_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigConfigSvcD3PD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TrigRootAnalysis_Dict_440_0_59, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::TrigConfigSvcD3PD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TrigRootAnalysis_Dict_440_0_60, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::TrigConfigSvcD3PD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TrigRootAnalysis_Dict_440_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TrigRootAnalysis_Dict_440_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigConfigSvcD3PD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TrigRootAnalysis_Dict_440_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigConfigSvcD3PD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TrigRootAnalysis_Dict_440_0_67, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigConfigSvcD3PD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TrigRootAnalysis_Dict_440_0_68, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigConfigSvcD3PD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrigConfigSvcD3PD", 1571, G__TrigRootAnalysis_Dict_440_0_69, (int) ('i'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD), -1, 0, 1, 1, 1, 0, "u 'D3PD::TrigConfigSvcD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrigConfigSvcD3PD", 1697, G__TrigRootAnalysis_Dict_440_0_70, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TrigRootAnalysis_Dict_460_0_1, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TrigRootAnalysis_Dict_460_0_2, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TrigRootAnalysis_Dict_460_0_3, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__TrigRootAnalysis_Dict_460_0_4, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TrigRootAnalysis_Dict_460_0_5, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TrigRootAnalysis_Dict_460_0_6, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TrigRootAnalysis_Dict_460_0_7, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TrigRootAnalysis_Dict_460_0_8, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TrigRootAnalysis_Dict_460_0_9, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TrigRootAnalysis_Dict_460_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TrigRootAnalysis_Dict_460_0_11, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TrigRootAnalysis_Dict_460_0_12, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TrigRootAnalysis_Dict_460_0_13, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_460_0_14, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_460_0_15, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_460_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_460_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_460_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_460_0_19, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_460_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TrigRootAnalysis_Dict_460_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TrigRootAnalysis_Dict_460_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__TrigRootAnalysis_Dict_460_0_23, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__TrigRootAnalysis_Dict_460_0_24, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__TrigRootAnalysis_Dict_460_0_25, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__TrigRootAnalysis_Dict_460_0_26, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,string,less<string>,allocator<pair<const string,string> > >", 6898, G__TrigRootAnalysis_Dict_460_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOstringgR(void) {
   /* pair<string,string> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR));
   G__memfunc_setup("pair<string,string>",1920,G__TrigRootAnalysis_Dict_461_0_1, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<string,string>",1920,G__TrigRootAnalysis_Dict_461_0_2, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - a u 'string' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR), -1, 1, 1, 1, 4, 0, "u 'pair<string,string>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,string>", 1920, G__TrigRootAnalysis_Dict_461_0_4, (int) ('i'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<string,string>", 2046, G__TrigRootAnalysis_Dict_461_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR(void) {
   /* vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__TrigRootAnalysis_Dict_600_0_1, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TrigRootAnalysis_Dict_600_0_2, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TrigRootAnalysis_Dict_600_0_3, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TrigRootAnalysis_Dict_600_0_4, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TrigRootAnalysis_Dict_600_0_5, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TrigRootAnalysis_Dict_600_0_6, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TrigRootAnalysis_Dict_600_0_7, 107, -1, G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TrigRootAnalysis_Dict_600_0_8, 107, -1, G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TrigRootAnalysis_Dict_600_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TrigRootAnalysis_Dict_600_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - sz u 'vector<string,allocator<string> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TrigRootAnalysis_Dict_600_0_11, 107, -1, G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TrigRootAnalysis_Dict_600_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TrigRootAnalysis_Dict_600_0_13, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TrigRootAnalysis_Dict_600_0_14, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__TrigRootAnalysis_Dict_600_0_15, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__TrigRootAnalysis_Dict_600_0_16, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n u 'vector<string,allocator<string> >' - 11 '(vector<string,allocator<string> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__TrigRootAnalysis_Dict_600_0_17, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >",8504,G__TrigRootAnalysis_Dict_600_0_18, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - first u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TrigRootAnalysis_Dict_600_0_19, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TrigRootAnalysis_Dict_600_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TrigRootAnalysis_Dict_600_0_21, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TrigRootAnalysis_Dict_600_0_22, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TrigRootAnalysis_Dict_600_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TrigRootAnalysis_Dict_600_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_600_0_25, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_600_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - first "
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_600_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position k - 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::size_type' 0 - n "
"u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TrigRootAnalysis_Dict_600_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_600_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_600_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - first u 'vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TrigRootAnalysis_Dict_600_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >", 8630, G__TrigRootAnalysis_Dict_600_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__TrigRootAnalysis_Dict_611_0_1, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TrigRootAnalysis_Dict_611_0_2, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TrigRootAnalysis_Dict_611_0_3, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TrigRootAnalysis_Dict_611_0_4, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TrigRootAnalysis_Dict_611_0_5, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TrigRootAnalysis_Dict_611_0_6, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TrigRootAnalysis_Dict_611_0_7, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TrigRootAnalysis_Dict_611_0_8, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TrigRootAnalysis_Dict_611_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TrigRootAnalysis_Dict_611_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz u 'vector<float,allocator<float> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TrigRootAnalysis_Dict_611_0_11, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TrigRootAnalysis_Dict_611_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TrigRootAnalysis_Dict_611_0_13, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TrigRootAnalysis_Dict_611_0_14, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__TrigRootAnalysis_Dict_611_0_15, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__TrigRootAnalysis_Dict_611_0_16, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n u 'vector<float,allocator<float> >' - 11 '(vector<float,allocator<float> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__TrigRootAnalysis_Dict_611_0_17, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__TrigRootAnalysis_Dict_611_0_18, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TrigRootAnalysis_Dict_611_0_19, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TrigRootAnalysis_Dict_611_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TrigRootAnalysis_Dict_611_0_21, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TrigRootAnalysis_Dict_611_0_22, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TrigRootAnalysis_Dict_611_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TrigRootAnalysis_Dict_611_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_611_0_25, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_611_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first "
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TrigRootAnalysis_Dict_611_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n "
"u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TrigRootAnalysis_Dict_611_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_611_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TrigRootAnalysis_Dict_611_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TrigRootAnalysis_Dict_611_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >", 8114, G__TrigRootAnalysis_Dict_611_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLConfigAccess(void) {
   /* D3PD::Trig::ConfigAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess));
   G__memfunc_setup("GetConfigSvc",1186,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD), -1, 1, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' update", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConfigTree",1298,G__TrigRootAnalysis_Dict_643_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TrigRootAnalysis_Dict_643_0_4, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::Trig::ConfigAccess::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TrigRootAnalysis_Dict_643_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ConfigAccess::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TrigRootAnalysis_Dict_643_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::Trig::ConfigAccess::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TrigRootAnalysis_Dict_643_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::Trig::ConfigAccess::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TrigRootAnalysis_Dict_643_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TrigRootAnalysis_Dict_643_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ConfigAccess::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TrigRootAnalysis_Dict_643_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::ConfigAccess::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TrigRootAnalysis_Dict_643_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::ConfigAccess::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TrigRootAnalysis_Dict_643_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::ConfigAccess::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ConfigAccess", 1318, G__TrigRootAnalysis_Dict_643_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLDataAccess(void) {
   /* D3PD::Trig::DataAccess */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess));
   G__memfunc_setup("DataAccess",972,G__TrigRootAnalysis_Dict_653_0_1, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess), -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 '0' eventTree u 'TString' - 11 '\"trig_\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventTree",1202,G__TrigRootAnalysis_Dict_653_0_2, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTree",1214,G__TrigRootAnalysis_Dict_653_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - eventTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteToTree",1118,G__TrigRootAnalysis_Dict_653_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - outputTree i - 'Int_t' 0 '10' detailLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__TrigRootAnalysis_Dict_653_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetailLevel",1387,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSMK",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL1PSK",651,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHLTPSK",758,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL1Result",1052,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned int>"), 0, 1, 1, 1, 9, "i 'D3PD::Trig::IDataAccess::L1ResultType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL2Result",1053,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 1, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEFResult",1066,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<short>"), 0, 1, 1, 1, 9, "i 'D3PD::Trig::IDataAccess::HLTResultType' - 0 - type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TrigRootAnalysis_Dict_653_0_15, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::Trig::DataAccess::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TrigRootAnalysis_Dict_653_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::DataAccess::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TrigRootAnalysis_Dict_653_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::Trig::DataAccess::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TrigRootAnalysis_Dict_653_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::Trig::DataAccess::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TrigRootAnalysis_Dict_653_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TrigRootAnalysis_Dict_653_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::DataAccess::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TrigRootAnalysis_Dict_653_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::DataAccess::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TrigRootAnalysis_Dict_653_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::Trig::DataAccess::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TrigRootAnalysis_Dict_653_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::Trig::DataAccess::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataAccess", 972, G__TrigRootAnalysis_Dict_653_0_27, (int) ('i'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess), -1, 0, 1, 1, 1, 0, "u 'D3PD::Trig::DataAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataAccess", 1098, G__TrigRootAnalysis_Dict_653_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_653_0_29, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::DataAccess' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigcLcLTrigDecisionFunctions(void) {
   /* D3PD::Trig::TrigDecisionFunctions */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions));
   G__memfunc_setup("IsPassed",796,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - name i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTriggers",1735,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedL1Triggers",1860,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedL2Triggers",1861,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedEFTriggers",1874,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TrigDecisionFunctions", 2299, G__TrigRootAnalysis_Dict_654_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TrigRootAnalysis_Dict_654_0_7, (int) ('u'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions), -1, 1, 1, 1, 1, 0, "u 'D3PD::Trig::TrigDecisionFunctions' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLTrigDecisionToolD3PD(void) {
   /* D3PD::TrigDecisionToolD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD));
   G__memfunc_setup("TrigDecisionToolD3PD",1901,G__TrigRootAnalysis_Dict_655_0_1, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 '0' eventTree U 'TTree' - 0 '0' confTree "
"u 'TString' - 11 '\"trig_\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TrigRootAnalysis_Dict_655_0_2, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::TrigDecisionToolD3PD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TrigRootAnalysis_Dict_655_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigDecisionToolD3PD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TrigRootAnalysis_Dict_655_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::TrigDecisionToolD3PD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TrigRootAnalysis_Dict_655_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::TrigDecisionToolD3PD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TrigRootAnalysis_Dict_655_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TrigRootAnalysis_Dict_655_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigDecisionToolD3PD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TrigRootAnalysis_Dict_655_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigDecisionToolD3PD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TrigRootAnalysis_Dict_655_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::TrigDecisionToolD3PD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TrigRootAnalysis_Dict_655_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::TrigDecisionToolD3PD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrigDecisionToolD3PD", 1901, G__TrigRootAnalysis_Dict_655_0_14, (int) ('i'), G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD), -1, 0, 1, 1, 1, 0, "u 'D3PD::TrigDecisionToolD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrigDecisionToolD3PD", 2027, G__TrigRootAnalysis_Dict_655_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncD3PDcLcLPyTrigDecisionToolD3PD(void) {
   /* D3PD::PyTrigDecisionToolD3PD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD));
   G__memfunc_setup("PyTrigDecisionToolD3PD",2102,G__TrigRootAnalysis_Dict_656_0_1, 105, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 '0' eventTree U 'TTree' - 0 '0' confTree "
"u 'TString' - 11 '\"trig_\"' prefix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPassed",796,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'string' - 11 - name i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedTriggers",1735,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedL1Triggers",1860,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedL2Triggers",1861,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPassedEFTriggers",1874,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "i 'D3PD::TrigDefs::DecisionTypes' - 0 'D3PD::TrigDefs::Physics' type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventTree",1202,G__TrigRootAnalysis_Dict_656_0_7, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TTree), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTree",1214,G__TrigRootAnalysis_Dict_656_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - eventTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteToTree",1118,G__TrigRootAnalysis_Dict_656_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - outputTree i - 'Int_t' 0 '10' detailLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfigTree",1298,G__TrigRootAnalysis_Dict_656_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TTree' - 0 - confTree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__TrigRootAnalysis_Dict_656_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetailLevel",1387,G__TrigRootAnalysis_Dict_656_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChainGroup",1296,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - patterns", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChainGroup",1296,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - pattern", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetConfigSvc",1186,G__TrigRootAnalysis_Dict_656_0_15, 117, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD), -1, 1, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' update", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TrigRootAnalysis_Dict_656_0_16, 85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&D3PD::PyTrigDecisionToolD3PD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TrigRootAnalysis_Dict_656_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::PyTrigDecisionToolD3PD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TrigRootAnalysis_Dict_656_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&D3PD::PyTrigDecisionToolD3PD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TrigRootAnalysis_Dict_656_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&D3PD::PyTrigDecisionToolD3PD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TrigRootAnalysis_Dict_656_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TrigRootAnalysis_Dict_656_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::PyTrigDecisionToolD3PD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TrigRootAnalysis_Dict_656_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::PyTrigDecisionToolD3PD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TrigRootAnalysis_Dict_656_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&D3PD::PyTrigDecisionToolD3PD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TrigRootAnalysis_Dict_656_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&D3PD::PyTrigDecisionToolD3PD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PyTrigDecisionToolD3PD", 2102, G__TrigRootAnalysis_Dict_656_0_28, (int) ('i'), 
G__get_linked_tagnum(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD), -1, 0, 1, 1, 1, 0, "u 'D3PD::PyTrigDecisionToolD3PD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PyTrigDecisionToolD3PD", 2228, G__TrigRootAnalysis_Dict_656_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTrigRootAnalysis_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTrigRootAnalysis_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTrigRootAnalysis_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TrigRootAnalysis_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator = { "vector<short,allocator<short> >::iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<short,allocator<short> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR = { "vector<long long,allocator<long long> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PD = { "D3PD" , 110 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDefs = { "D3PD::TrigDefs" , 110 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDefscLcLDecisionTypes = { "D3PD::TrigDefs::DecisionTypes" , 101 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrig = { "D3PD::Trig" , 110 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess = { "D3PD::Trig::IDataAccess" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess = { "D3PD::Trig::IConfigAccess" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling = { "D3PD::Trig::ChainGroupHandling" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup = { "D3PD::ChainGroup" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType = { "D3PD::Trig::IDataAccess::L1ResultType" , 101 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType = { "D3PD::Trig::IDataAccess::HLTResultType" , 101 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD = { "D3PD::IITrigConfigSvcD3PD" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD = { "D3PD::IITrigDecisionToolD3PD" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR = { "allocator<pair<const string,int> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator = { "map<string,int,less<string>,allocator<pair<const string,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator = { "map<string,int,less<string>,allocator<pair<const string,int> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR = { "allocator<pair<const string,float> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_pairlEstringcOfloatgR = { "pair<string,float>" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator = { "map<string,float,less<string>,allocator<pair<const string,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator = { "map<string,float,less<string>,allocator<pair<const string,float> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD = { "D3PD::TrigConfigSvcD3PD" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR = { "pair<int,pair<int,int> >" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<string,int,less<string>,allocator<pair<const string,int> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<string,int,less<string>,allocator<pair<const string,int> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<string,float,less<string>,allocator<pair<const string,float> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<string,float,less<string>,allocator<pair<const string,float> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR = { "allocator<pair<const string,string> >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<string,string,less<string>,allocator<pair<const string,string> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<string,string,less<string>,allocator<pair<const string,string> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR = { "map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<unsigned int,unsigned int,less<unsigned int>,allocator<pair<const unsigned int,unsigned int> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgR = { "map<unsigned int,string,less<unsigned int>,allocator<pair<const unsigned int,string> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<unsigned int,string,less<unsigned int>,allocator<pair<const unsigned int,string> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<unsigned int,string,less<unsigned int>,allocator<pair<const unsigned int,string> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR = { "map<pair<int,int>,string,less<pair<int,int> >,allocator<pair<const pair<int,int>,string> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<pair<int,int>,string,less<pair<int,int> >,allocator<pair<const pair<int,int>,string> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<pair<int,int>,string,less<pair<int,int> >,allocator<pair<const pair<int,int>,string> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR = { "map<pair<int,int>,unsigned int,less<pair<int,int> >,allocator<pair<const pair<int,int>,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<pair<int,int>,unsigned int,less<pair<int,int> >,allocator<pair<const pair<int,int>,unsigned int> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<pair<int,int>,unsigned int,less<pair<int,int> >,allocator<pair<const pair<int,int>,unsigned int> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,map<int,string,less<int>,allocator<pair<const int,string> > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,map<int,string,less<int>,allocator<pair<const int,string> > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<string,allocator<string> >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR = { "map<pair<int,pair<int,int> >,unsigned short,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,unsigned short> > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<unsigned int,allocator<unsigned int> >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<unsigned int,allocator<unsigned int> > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<unsigned short,allocator<unsigned short> >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<unsigned short,allocator<unsigned short> > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<unsigned char,allocator<unsigned char> >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<unsigned char,allocator<unsigned char> > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<float,allocator<float> >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<float,allocator<float> > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR = { "vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<pair<int,pair<int,int> >,vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > >,less<pair<int,pair<int,int> > >,allocator<pair<const pair<int,pair<int,int> >,vector<vector<unsigned char,allocator<unsigned char> >,allocator<vector<unsigned char,allocator<unsigned char> > > > > > >" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess = { "D3PD::Trig::ConfigAccess" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess = { "D3PD::Trig::DataAccess" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions = { "D3PD::Trig::TrigDecisionFunctions" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD = { "D3PD::TrigDecisionToolD3PD" , 99 , -1 };
G__linked_taginfo G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD = { "D3PD::PyTrigDecisionToolD3PD" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTrigRootAnalysis_Dict() {
  G__TrigRootAnalysis_DictLN_TClass.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_TBuffer.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_TMemberInspector.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_TObject.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_TNamed.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_TString.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_string.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PD.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDefs.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDefscLcLDecisionTypes.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrig.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_lesslEstringgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_pairlEstringcOintgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_pairlEstringcOfloatgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_pairlEintcOintgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_TTree.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD.tagnum = -1 ;
  G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTrigRootAnalysis_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEshortcOallocatorlEshortgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEshortcOallocatorlEshortgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_string);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PD);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDefs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDefscLcLDecisionTypes),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrig);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccess),sizeof(D3PD::Trig::IDataAccess),-1,263175,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLIDataAccess,G__setup_memfuncD3PDcLcLTrigcLcLIDataAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIConfigAccess),sizeof(D3PD::Trig::IConfigAccess),-1,263169,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLIConfigAccess,G__setup_memfuncD3PDcLcLTrigcLcLIConfigAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLChainGroupHandling),sizeof(D3PD::Trig::ChainGroupHandling),-1,262157,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLChainGroupHandling,G__setup_memfuncD3PDcLcLTrigcLcLChainGroupHandling);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLChainGroup),sizeof(D3PD::ChainGroup),-1,323584,(char*)NULL,G__setup_memvarD3PDcLcLChainGroup,G__setup_memfuncD3PDcLcLChainGroup);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLL1ResultType);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLIDataAccesscLcLHLTResultType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigConfigSvcD3PD),sizeof(D3PD::IITrigConfigSvcD3PD),-1,263182,(char*)NULL,G__setup_memvarD3PDcLcLIITrigConfigSvcD3PD,G__setup_memfuncD3PDcLcLIITrigConfigSvcD3PD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLIITrigDecisionToolD3PD),sizeof(D3PD::IITrigDecisionToolD3PD),-1,263175,(char*)NULL,G__setup_memvarD3PDcLcLIITrigDecisionToolD3PD,G__setup_memfuncD3PDcLcLIITrigDecisionToolD3PD);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOfloatgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_pairlEstringcOfloatgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigConfigSvcD3PD),sizeof(D3PD::TrigConfigSvcD3PD),-1,323840,(char*)NULL,G__setup_memvarD3PDcLcLTrigConfigSvcD3PD,G__setup_memfuncD3PDcLcLTrigConfigSvcD3PD);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_pairlEintcOpairlEintcOintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_allocatorlEpairlEconstsPstringcOstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR,G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_pairlEstringcOstringgR),sizeof(pair<string,string>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOstringgR,G__setup_memfuncpairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEunsignedsPintcOstringcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOstringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOstringcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOstringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEpairlEintcOintgRcOunsignedsPintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOmaplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOunsignedsPshortgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),sizeof(vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_vectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_maplEpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRcOlesslEpairlEintcOpairlEintcOintgRsPgRsPgRcOallocatorlEpairlEconstsPpairlEintcOpairlEintcOintgRsPgRcOvectorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRcOallocatorlEvectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLConfigAccess),sizeof(D3PD::Trig::ConfigAccess),-1,323591,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLConfigAccess,G__setup_memfuncD3PDcLcLTrigcLcLConfigAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLDataAccess),sizeof(D3PD::Trig::DataAccess),-1,324864,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLDataAccess,G__setup_memfuncD3PDcLcLTrigcLcLDataAccess);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigcLcLTrigDecisionFunctions),sizeof(D3PD::Trig::TrigDecisionFunctions),-1,262154,(char*)NULL,G__setup_memvarD3PDcLcLTrigcLcLTrigDecisionFunctions,G__setup_memfuncD3PDcLcLTrigcLcLTrigDecisionFunctions);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLTrigDecisionToolD3PD),sizeof(D3PD::TrigDecisionToolD3PD),-1,323840,(char*)NULL,G__setup_memvarD3PDcLcLTrigDecisionToolD3PD,G__setup_memfuncD3PDcLcLTrigDecisionToolD3PD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TrigRootAnalysis_DictLN_D3PDcLcLPyTrigDecisionToolD3PD),sizeof(D3PD::PyTrigDecisionToolD3PD),-1,323840,(char*)NULL,G__setup_memvarD3PDcLcLPyTrigDecisionToolD3PD,G__setup_memfuncD3PDcLcLPyTrigDecisionToolD3PD);
}
extern "C" void G__cpp_setupTrigRootAnalysis_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTrigRootAnalysis_Dict()");
  G__set_cpp_environmentTrigRootAnalysis_Dict();
  G__cpp_setup_tagtableTrigRootAnalysis_Dict();

  G__cpp_setup_inheritanceTrigRootAnalysis_Dict();

  G__cpp_setup_typetableTrigRootAnalysis_Dict();

  G__cpp_setup_memvarTrigRootAnalysis_Dict();

  G__cpp_setup_memfuncTrigRootAnalysis_Dict();
  G__cpp_setup_globalTrigRootAnalysis_Dict();
  G__cpp_setup_funcTrigRootAnalysis_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTrigRootAnalysis_Dict();
  return;
}
class G__cpp_setup_initTrigRootAnalysis_Dict {
  public:
    G__cpp_setup_initTrigRootAnalysis_Dict() { G__add_setup_func("TrigRootAnalysis_Dict",(G__incsetup)(&G__cpp_setupTrigRootAnalysis_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTrigRootAnalysis_Dict() { G__remove_setup_func("TrigRootAnalysis_Dict"); }
};
G__cpp_setup_initTrigRootAnalysis_Dict G__cpp_setup_initializerTrigRootAnalysis_Dict;

